{"version":3,"sources":["webpack:///./src/app/modules/dashboard-v2-copy/components/color-panel/color-panel/color-panel.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/color-panel/color-panel/color-panel.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/color-panel/color-panel/color-panel.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/create-nodes/create-nodes.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/create-nodes/create-nodes.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/create-nodes/create-nodes.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-header/dashboard-header.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-header/dashboard-header.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-header/dashboard-header.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-sidebar/dashboard-sidebar.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-sidebar/dashboard-sidebar.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/dashboard-v2-sidebar/dashboard-sidebar.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-exporter/graph-exporter.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-exporter/graph-exporter.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-exporter/graph-exporter.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-v2-visualizer/graph-visualizer.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-v2-visualizer/graph-visualizer.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/graph-v2-visualizer/graph-visualizer.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/components/main-v2/main.component.html","webpack:///./src/app/modules/dashboard-v2-copy/components/main-v2/main.component.scss","webpack:///./src/app/modules/dashboard-v2-copy/components/main-v2/main.component.ts","webpack:///./src/app/modules/dashboard-v2-copy/dashboard-v2-routing.module.ts","webpack:///./src/app/modules/dashboard-v2-copy/dashboard-v2.module.ts","webpack:///./src/app/modules/dashboard-v2-copy/services/colorService/color-service.service.ts"],"names":[],"mappings":"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","file":"modules-dashboard-v2-copy-dashboard-v2-module.js","sourcesContent":["module.exports = \"<div class=\\\"wrapper\\\">\\n    <div class=\\\"panel\\\">\\n        <p class=\\\"panelTitle\\\">Legend</p>\\n        <div class=\\\"panelbody\\\" *ngIf=\\\"showDropDown\\\">\\n            <ul class=\\\"panelList\\\" type=\\\"none\\\">\\n                <ng-container *ngFor=\\\"let item of colorData\\\">\\n                    <li class=\\\"item\\\" [ngStyle]=\\\"{color: item.color}\\\"><span class=\\\"circle\\\" [ngStyle]=\\\"{background: item.color}\\\"></span>{{item?.name}}</li>\\n                </ng-container>\\n            </ul>\\n        </div>\\n        <div class=\\\"dropDown\\\" (click)=\\\"toggleDropdown()\\\">\\n            <i class=\\\"fas fa-chevron-up\\\" *ngIf=\\\"showDropDown\\\"></i>\\n            <i class=\\\"fas fa-chevron-down\\\" *ngIf=\\\"!showDropDown\\\"></i>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".wrapper {\\n  background-color: transparent;\\n  position: absolute;\\n  right: 0;\\n  padding-right: 20px;\\n  padding-top: 20px;\\n  z-index: 5; }\\n\\n.panel {\\n  background-color: white;\\n  border-radius: 10px;\\n  width: 150px;\\n  margin: auto;\\n  margin-right: 0; }\\n\\n.panelTitle,\\n.panelbody {\\n  padding: 10px 5px;\\n  max-height: 65vh;\\n  overflow-y: auto; }\\n\\n.panelbody::-webkit-scrollbar {\\n  width: 2px; }\\n\\n.panelTitle {\\n  font-size: 1rem;\\n  font-weight: 400;\\n  text-align: center; }\\n\\n.panelList {\\n  padding-left: 14px; }\\n\\n.item {\\n  word-wrap: break;\\n  line-height: 2; }\\n\\n.circle {\\n  width: 16px;\\n  height: 16px;\\n  display: inline-block;\\n  border-radius: 50%;\\n  margin-right: 8px; }\\n\\n.dropDown {\\n  cursor: pointer; }\\n\\n.dropDown i {\\n    display: block;\\n    text-align: center;\\n    font-size: 20px;\\n    padding-bottom: 8px; }\\n\\n.display-ok {\\n  display: block; }\\n\\n.no-display {\\n  display: none; }\\n\\n.bg-red {\\n  background-color: red !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkaXR5YS9wcm9qZWN0L25ldHdvcmtfdml6dWFsaXplcl9kMy9uZXR3b3JrLXZpc3VhbGl6ZXIvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2NvbG9yLXBhbmVsL2NvbG9yLXBhbmVsL2NvbG9yLXBhbmVsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNkJBQTZCO0VBQzdCLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixVQUFVLEVBQUE7O0FBR2Q7RUFDSSx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixZQUFZO0VBQ1osZUFBZSxFQUFBOztBQUduQjs7RUFFSSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFVBQVUsRUFBQTs7QUFHZDtFQUNJLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHFCQUFxQjtFQUNyQixrQkFBa0I7RUFDbEIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksZUFBZSxFQUFBOztBQURuQjtJQUdRLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLG1CQUFtQixFQUFBOztBQUkzQjtFQUNJLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksZ0NBQWdDLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Rhc2hib2FyZC12Mi1jb3B5L2NvbXBvbmVudHMvY29sb3ItcGFuZWwvY29sb3ItcGFuZWwvY29sb3ItcGFuZWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud3JhcHBlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG4gICAgei1pbmRleDogNTtcbn1cblxuLnBhbmVsIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIHdpZHRoOiAxNTBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xufVxuXG4ucGFuZWxUaXRsZSxcbi5wYW5lbGJvZHkge1xuICAgIHBhZGRpbmc6IDEwcHggNXB4O1xuICAgIG1heC1oZWlnaHQ6IDY1dmg7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLnBhbmVsYm9keTo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgIHdpZHRoOiAycHg7XG59XG5cbi5wYW5lbFRpdGxlIHtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5wYW5lbExpc3Qge1xuICAgIHBhZGRpbmctbGVmdDogMTRweDtcbn1cblxuLml0ZW0ge1xuICAgIHdvcmQtd3JhcDogYnJlYWs7XG4gICAgbGluZS1oZWlnaHQ6IDI7XG59XG5cbi5jaXJjbGUge1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMTZweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIG1hcmdpbi1yaWdodDogOHB4O1xufVxuXG4uZHJvcERvd24ge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBpIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuICAgIH1cbn1cblxuLmRpc3BsYXktb2sge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4ubm8tZGlzcGxheSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLmJnLXJlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { ColorServiceService } from './../../../services/colorService/color-service.service';\nimport { SharedGraphService } from './../../../../core/services/shared-graph.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'app-color-panel',\n  templateUrl: './color-panel.component.html',\n  styleUrls: ['./color-panel.component.scss']\n})\nexport class ColorPanelComponent implements OnInit {\n\n  public colorObject = undefined;\n  public showDeletedData = false;\n  public objectKeys = [];\n  public colorData = [];\n  public showDropDown = true;\n  constructor(\n    private colorSrvc: ColorServiceService,\n    private sharedGraphSrvc: SharedGraphService\n    ) { }\n\n  ngOnInit() {\n    // get color panel details\n    this.colorSrvc.colorObj$.subscribe(data => {\n      this.colorObject = data;\n      // console.log('color object is ', this.colorObject);\n      this.objectKeys = Object.keys(this.colorObject['defaultColor']);\n\n      this.processColors(this.objectKeys, this.colorObject['defaultColor']);\n      // console.log('processed color data is ', this.colorData);\n    });\n\n    // to monitor toggle status\n    this.sharedGraphSrvc.showDeletedData.subscribe(toggle => {\n      // console.log('recieved toggle', toggle);\n      if (toggle !== null && (toggle.toString() === 'true' || toggle.toString() === 'false')) {\n        // if the toggle variable is  only true and false and nothing else\n        this.showDeletedData = toggle;\n      } else {\n        // set to false by default\n        this.showDeletedData = false;\n      }\n      this.addDeleteColor();\n    });\n  }\n\n  processColors(keyArray, colorObj) {\n    this.colorData = [];\n    if (!!keyArray.length || !!Object.keys(colorObj).length) {\n      // both have the data , kindly process\n      keyArray.map(key => {\n        // for each key create a new object which has item name and item color\n        this.colorData.push({ name: key, color: colorObj[key] });\n      });\n    } else {\n      console.log('empty key Array or colorObj in color panel');\n      return [];\n    }\n  }\n\n  addDeleteColor() {\n    // add new color for deleted node\n    if (this.showDeletedData) {\n      if(_.some(this.colorData,{name:\"Deleted\",color:\"#C0C0C0\"})){\n\n      }else{\n        this.colorData.push({name:\"Deleted\",color:\"#C0C0C0\"});\n      }\n    }else{\n      _.remove(this.colorData,{name:\"Deleted\",color:\"#C0C0C0\"});\n    }\n  }\n\n  toggleDropdown() {\n    this.showDropDown = !this.showDropDown;\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid pr-0\\\">\\n    <div class=\\\"btn-group nodes\\\">\\n        <button type=\\\"button\\\" (click)=\\\"createNode()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createNodeModal\\\" class=\\\"circularBtn\\\" aria-expanded=\\\"false\\\">\\n      <img src=\\\"./../../../../../assets/create_nodes.svg\\\">\\n    </button>\\n    </div>\\n    <div class=\\\"btn-group relationships\\\">\\n        <button type=\\\"button\\\" (click)=\\\"createRelation()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#createRelationModal\\\" class=\\\"circularBtn\\\" aria-expanded=\\\"false\\\">\\n            <img src=\\\"./../../../../../assets/create_relations.svg\\\">\\n    </button>\\n    </div>\\n    <div class=\\\"btn-group algorithms\\\">\\n        <algo-runner-toolbar></algo-runner-toolbar>\\n    </div>\\n</div>\\n<!--modal template to show when node is to be created-->\\n<div class=\\\"modal fade\\\" id=\\\"createNodeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"NodeModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"NodeModalLabel\\\" *ngIf=\\\"popupConfig.createNodePopup === true\\\">Create Element</h5>\\n                <h5 class=\\\"modal-title\\\" id=\\\"NodeModalLabel\\\" *ngIf=\\\"popupConfig.editNodePopup === true\\\">Element Details</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"modalItem\\\">\\n                    <p class=\\\"sectionName\\\">\\n                        {{TYPE_TEXT}}\\n                    </p>\\n                    <span class=\\\"inputSpan\\\">\\n                        <ng-container *ngIf=\\\"selectedType !== ADD_NEW_LABEL\\\">\\n                                <sui-select class=\\\"selection\\\"\\n                                [(ngModel)]=\\\"selectedType\\\"\\n                                (ngModelChange)=\\\"updateProperties($event)\\\"\\n                                [options]=\\\"typeOptions\\\"\\n                                [isSearchable]=\\\"true\\\"\\n                                [isDisabled]=\\\"disabledBox\\\"\\n                                #select>\\n                        <sui-select-option *ngFor=\\\"let option of select.filteredOptions\\\"\\n                                           [value]=\\\"option\\\">\\n                        </sui-select-option>\\n                                  </sui-select>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"selectedType === ADD_NEW_LABEL\\\">\\n                            <div class=\\\"ui input typeTextBox\\\">\\n                                    <span>\\n                                            <app-color-picker [elWidth]=\\\"'50px'\\\" [elDefault]=\\\"'#96C1FA'\\\"\\n                                        (selectedColorCode)=\\\"selectedColorForNewType($event)\\\"\\n                                        ></app-color-picker>\\n                                        </span>\\n                    <input type=\\\"text\\\" placeholder=\\\"Enter Type...\\\" id=\\\"id_newLabelNode\\\">\\n                </div>\\n\\n                </ng-container>\\n                </span>\\n            </div>\\n            <div class=\\\"modalItem\\\" *ngIf=\\\"labelProperties?.length > 0 && selectedType?.length > 0\\\">\\n                <h5 class=\\\"propertyLabel\\\">\\n                    Properties <span class=\\\"fas fa-info-circle\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" [title]=\\\"toolTipText\\\"></span>\\n                </h5>\\n                <!--container to display pre exisiting properties-->\\n                <ng-container *ngFor=\\\"let data of labelProperties\\\">\\n                    <div class=\\\"modalItem\\\">\\n                        <p class=\\\"sectionName\\\">{{data}}</p>\\n                        <span class=\\\"inputSpan\\\">\\n                                <ng-container *ngIf = \\\"data === 'Name'\\\">\\n                                    <div class=\\\"ui corner labeled input normalTextBox\\\">\\n                                        <input type=\\\"text\\\" placeholder=\\\"Enter Name...\\\" id=\\\"id_{{data}}\\\" [(ngModel)] = \\\"selectedPropertiesObject[data]\\\" (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" [disabled]=\\\"restoreOptions === true\\\">\\n                                        <div class=\\\"ui corner label\\\">\\n                                            <i class=\\\"asterisk icon\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </ng-container>\\n                                <ng-container *ngIf=\\\"data !== 'Name'\\\">\\n                                    <sui-select class=\\\"selection\\\" *ngIf=\\\"!availablePropertyList[data]?.enableNewProperty\\\"\\n                                    [options]=\\\"availablePropertyList[data]['list']\\\" [(ngModel)]=\\\"selectedPropertiesObject[data]\\\"\\n                                    (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" [isSearchable]=\\\"true\\\"\\n                                    [isDisabled]=\\\"restoreOptions\\\" #Propertyselect>\\n                                        <sui-select-option *ngFor=\\\"let option of Propertyselect.filteredOptions\\\" [value]=\\\"option\\\"></sui-select-option>\\n                                    </sui-select>\\n                                    <div class=\\\"ui corner labeled input normalTextBox\\\" *ngIf=\\\"availablePropertyList[data]?.enableNewProperty\\\">\\n                                        <input type=\\\"text\\\" placeholder=\\\"Enter New Property...\\\" id=\\\"id_{{data}}\\\" [(ngModel)]=\\\"selectedPropertiesObject[data]\\\" (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" (keyup)=\\\"updateNewPropertyValue($event,data)\\\">\\n                                        <div class=\\\"ui corner label\\\">\\n                                            <i class=\\\"asterisk icon\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </ng-container>\\n                            </span>\\n                        <span class=\\\"supportIcons\\\" *ngIf=\\\"(data?.length > 0) && data !== 'Name' && !availablePropertyList[data]?.enableNewProperty && !restoreOptions\\\" (click)=\\\"deleteProperty(data)\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\n                        <span class=\\\"supportIcons\\\" *ngIf=\\\"(data?.length > 0) && data !== 'Name' && availablePropertyList[data]?.enableNewProperty && !restoreOptions\\\" (click)=\\\"availablePropertyList[data].enableNewProperty = false\\\"><i class=\\\"far fa-times-circle\\\" style=\\\"color: red;\\\"></i></span>\\n                        <span class=\\\"supportIcons nameKey\\\" *ngIf=\\\"(data?.length > 0) && data === 'Name' && !restoreOptions\\\"> \\n                                <i class=\\\"fas fa-info-circle\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" [title]=\\\"'Name is mandatory and cannot be deleted'\\\"></i>\\n                            </span>\\n                    </div>\\n                </ng-container>\\n                <!--container to display pre exisiting properties end-->\\n\\n                <!--Template to add a new property-->\\n\\n                <ng-container *ngIf=\\\"enableNewTemplate\\\">\\n                    <form id=\\\"NewPropertyGroup\\\">\\n                        <div class=\\\"modalItem\\\">\\n                            <div class=\\\"ui divider\\\"></div>\\n                            <p class=\\\"sectionName\\\">Property Name</p>\\n                            <span class=\\\"inputSpan newTemplate\\\">\\n                                    <div class=\\\"ui input focus\\\">\\n                                        <input type=\\\"text\\\" placeholder=\\\"Property Value\\\" id=\\\"propertyKey\\\">\\n                                    </div>\\n                                </span>\\n                            <span class=\\\"supportIcons customDelete\\\" (click)=\\\"enableNewTemplate = false\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\n                            <br>\\n                            <div class=\\\"ui divider\\\"></div>\\n                        </div>\\n                    </form>\\n                </ng-container>\\n                <!--Template to add a new property ends-->\\n            </div>\\n            <a class=\\\"newLink\\\" *ngIf=\\\"selectedType?.length > 0 && selectedType !== ADD_NEW_LABEL && !enableNewTemplate && !restoreOptions\\\" (click)=\\\"addNewProperty('node')\\\">Add New Property</a>\\n            <a class=\\\"newLink\\\" *ngIf=\\\"selectedType?.length > 0 && selectedType !== ADD_NEW_LABEL && enableNewTemplate && !restoreOptions\\\" (click)=\\\"saveNewProperty('node')\\\">Save Property</a>\\n        </div>\\n        <div class=\\\"modal-footer\\\" *ngIf=\\\"selectedType !== ADD_NEW_LABEL\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger deleteBtn\\\" *ngIf=\\\"popupConfig.editNodePopup === true && !restoreOptions\\\" style=\\\"color: white;\\\" (click)=\\\"activateDelete('deleteModal', 'node')\\\">Delete</button>\\n            <a class=\\\"mailBtn\\\" *ngIf=\\\"popupConfig.editNodePopup === true\\\">Send Mail</a>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" style=\\\"color: red;\\\">Cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" (click)=\\\"submitModal()\\\" *ngIf=\\\"popupConfig.createNodePopup === true && !restoreOptions\\\" [disabled]=\\\"(selectedType?.length <= 0) || (!selectedPropertiesObject['Name'])\\\">Create</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" (click)=\\\"submitModal('edit')\\\" *ngIf=\\\"popupConfig.editNodePopup === true && !restoreOptions\\\" [disabled]=\\\"(selectedType?.length <= 0) || (!selectedPropertiesObject['Name'])\\\" id=\\\"edit_btn\\\">Update</button>\\n            <button type=\\\"button\\\" id=\\\"restoreBtn\\\" class=\\\"btn btn-info restoreBtn\\\" *ngIf=\\\"(popupConfig.editNodePopup === true || editNodePopup === true) && restoreOptions\\\" style=\\\"color: white;\\\" (click)=\\\"restoreData('node')\\\">Restore </button>\\n        </div>\\n        <div class=\\\"modal-footer\\\" *ngIf=\\\"selectedType === ADD_NEW_LABEL\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" id=\\\"edit_btn\\\" (click)=\\\"addNewLabel('node')\\\">Add Label</button>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n<!--modal node create end-->\\n\\n\\n<!--modal relationship start-->\\n<div class=\\\"modal fade\\\" id=\\\"createRelationModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"RelModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"RelModalLabel\\\" *ngIf=\\\"createRelationPopup == true\\\">Create Relationship</h5>\\n                <h5 class=\\\"modal-title\\\" id=\\\"RelModalLabel\\\" *ngIf=\\\"editRelationPopup == true\\\">Relationship Details</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"modalItem\\\">\\n                    <p class=\\\"sectionName\\\">\\n                        {{TYPE_TEXT}}\\n                    </p>\\n                    <span class=\\\"inputSpan\\\">\\n                        <ng-container *ngIf=\\\"selectedType !== ADD_NEW_TYPE\\\">\\n                                <sui-select class=\\\"selection\\\"\\n                                [(ngModel)]=\\\"selectedType\\\"\\n                                (ngModelChange)=\\\"updateRelProperties($event)\\\"\\n                                [options]=\\\"relationTypeOptions\\\"\\n                                [isSearchable]=\\\"true\\\"\\n                                [isDisabled]=\\\"disabledBox\\\"\\n                                #selectRelationBox>\\n                        <sui-select-option *ngFor=\\\"let option of selectRelationBox.filteredOptions\\\"\\n                                           [value]=\\\"option\\\">\\n                        </sui-select-option>\\n                    </sui-select>\\n                        </ng-container>\\n                        <ng-container *ngIf=\\\"selectedType === ADD_NEW_TYPE\\\">\\n                            <div class=\\\"ui input typeTextBox\\\"><input type=\\\"text\\\" placeholder=\\\"Enter Type...\\\" id=\\\"id_newLabelRelation\\\"></div>\\n                    </ng-container>\\n                    </span>\\n                </div>\\n                <div class=\\\"modalItem\\\" *ngIf=\\\"typeProperties?.length > 0 && selectedType?.length > 0\\\">\\n                    <h5 class=\\\"propertyLabel\\\">\\n                        Properties <span class=\\\"fas fa-info-circle\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" [title]=\\\"toolTipText\\\"></span>\\n                    </h5>\\n\\n\\n                    <ng-container *ngFor=\\\"let data of typeProperties\\\">\\n                        <div class=\\\"modalItem\\\">\\n                            <p class=\\\"sectionName\\\">{{data}}</p>\\n                            <span class=\\\"inputSpan\\\">\\n                                <ng-container *ngIf=\\\"data !== 'Name'\\\">\\n                                    <sui-select class=\\\"selection\\\" *ngIf=\\\"!availablePropertyList[data]?.enableNewProperty\\\"\\n                                     [options]=\\\"availablePropertyList[data]['list']\\\" [(ngModel)]=\\\"selectedPropertiesObject[data]\\\"\\n                                     (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" [isSearchable]=\\\"true\\\"\\n                                     [isDisabled]=\\\"restoreOptions\\\" #PropertyRelselect>\\n                                        <sui-select-option *ngFor=\\\"let option of PropertyRelselect.filteredOptions\\\" [value]=\\\"option\\\"></sui-select-option>\\n                                    </sui-select>\\n                                    <div class=\\\"ui corner labeled input normalTextBox\\\" *ngIf=\\\"availablePropertyList[data]?.enableNewProperty\\\">\\n                                        <input type=\\\"text\\\" placeholder=\\\"Enter New Property...\\\" id=\\\"id_{{data}}\\\" [(ngModel)]=\\\"selectedPropertiesObject[data]\\\" (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" (keyup)=\\\"updateNewPropertyValue($event,data)\\\">\\n                                        <div class=\\\"ui corner label\\\">\\n                                            <i class=\\\"asterisk icon\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </ng-container>\\n                                <!-- <input type=\\\"text\\\" id=\\\"id_{{data}}\\\"> -->\\n                            </span>\\n                            <span class=\\\"supportIcons\\\" *ngIf=\\\"(data?.length > 0) && data !== 'Name' && !availablePropertyList[data]?.enableNewProperty && !restoreOptions\\\" (click)=\\\"deleteProperty(data, 'relation')\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\n                            <span class=\\\"supportIcons\\\" *ngIf=\\\"(data?.length > 0) && data !== 'Name' && availablePropertyList[data]?.enableNewProperty && !restoreOptions\\\" (click)=\\\"availablePropertyList[data].enableNewProperty = false\\\"><i class=\\\"far fa-times-circle\\\" style=\\\"color: red;\\\"></i></span>\\n                            <span class=\\\"supportIcons nameKey\\\" *ngIf=\\\"(data?.length > 0) && data === 'Name' && !restoreOptions\\\">\\n                                <i class=\\\"fas fa-info-circle\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"right\\\" [title]=\\\"'Name is mandatory and cannot be deleted'\\\" ></i>\\n                            </span>\\n                        </div>\\n                    </ng-container>\\n                </div>\\n                <form id=\\\"NewPropertyGroupRel\\\" *ngIf=\\\"enableNewTemplate\\\">\\n                    <div class=\\\"modalItem\\\">\\n                        <div class=\\\"ui divider\\\"></div>\\n                        <p class=\\\"sectionName\\\">Property Name</p>\\n                        <span class=\\\"inputSpan newTemplate\\\">\\n                                        <div class=\\\"ui input focus\\\">\\n                                            <input type=\\\"text\\\" placeholder=\\\"Property Name\\\" id=\\\"propertyKeyRel\\\">\\n                                        </div>\\n                                    </span>\\n                        <span class=\\\"supportIcons customDelete\\\" (click)=\\\"enableNewTemplate = false\\\"><i class=\\\"far fa-trash-alt\\\"></i></span>\\n                        <br/>\\n                        <div class=\\\"ui divider lower\\\"></div>\\n                    </div>\\n                </form>\\n\\n\\n                <div class=\\\"modalItem buttonContainer\\\">\\n                    <a class=\\\"newLink2\\\" *ngIf=\\\"selectedType?.length > 0 && selectedType !== ADD_NEW_TYPE && !enableNewTemplate && !restoreOptions\\\" (click)=\\\"addNewProperty('relation')\\\">Add New Property</a>\\n                    <a class=\\\"newLink2\\\" *ngIf=\\\"selectedType?.length > 0 && selectedType !== ADD_NEW_TYPE && enableNewTemplate && !restoreOptions\\\" (click)=\\\"saveNewProperty('relation')\\\">Save Property</a>\\n                </div>\\n\\n                <div class=\\\"relationScope\\\" *ngIf=\\\"selectedType?.length > 0 && selectedType !== ADD_NEW_TYPE\\\">\\n                    <div class=\\\"modalItem\\\">\\n                        <h5 class=\\\"propertyLabel\\\">\\n                            Connection <span class=\\\"fas fa-info-circle\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" [title]=\\\"toolTipText\\\"></span>\\n                        </h5>\\n                        <p class=\\\"sectionName\\\">From</p>\\n                        <span class=\\\"inputSpan\\\" *ngIf=\\\"!disabledFromBox\\\">\\n                            <sui-select class=\\\"selection\\\"\\n                                [(ngModel)]=\\\"selectedNodeNameSource\\\"\\n                                (ngModelChange)=\\\"updateList('to',[selectedNodeNameSource])\\\"\\n                                [optionsLookup]=\\\"optionLookUp\\\"\\n                                labelField=\\\"key\\\"\\n                                valueField=\\\"key\\\"\\n                                [isSearchable]=\\\"true\\\"\\n                                [isDisabled]=\\\"disabledFromBox\\\"\\n                                #NodeFromName>\\n                                <sui-select-option *ngFor=\\\"let option of NodeFromName.filteredOptions\\\"\\n                                    [value]=\\\"option\\\">\\n                                </sui-select-option>\\n                            </sui-select>\\n                        </span>\\n                        <span class=\\\"inputSpan\\\" *ngIf=\\\"disabledFromBox\\\">\\n                            <div class=\\\"ui corner labeled input normalTextBox\\\">\\n                                <input type=\\\"text\\\" [(ngModel)] = \\\"selectedNodeNameSource\\\" (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" [disabled]=\\\"restoreOptions || disabledFromBox\\\">\\n                            </div>\\n                        </span>\\n                    </div>\\n                    <div class=\\\"modalItem\\\">\\n                        <p class=\\\"sectionName\\\">To</p>\\n                        <span class=\\\"inputSpan\\\" *ngIf=\\\"!disabledToBox\\\">\\n                            <sui-select class=\\\"selection\\\"\\n                                [(ngModel)]=\\\"selectedNodeNameTarget\\\"\\n                                (ngModelChange)=\\\"updateList('from',[selectedNodeNameTarget])\\\"\\n                                [optionsLookup]=\\\"optionLookUp\\\"\\n                                labelField=\\\"key\\\"\\n                                valueField=\\\"key\\\"\\n                                [isSearchable]=\\\"true\\\"\\n                                [isDisabled]=\\\"disabledToBox\\\"\\n                                #NodeToName>\\n                                <sui-select-option *ngFor=\\\"let option of NodeToName.filteredOptions\\\"\\n                                    [value]=\\\"option\\\">\\n                                </sui-select-option>\\n                            </sui-select> \\n                        </span>\\n                        <span class=\\\"inputSpan\\\" *ngIf=\\\"disabledToBox\\\">\\n                            <div class=\\\"ui corner labeled input normalTextBox\\\">\\n                                <input type=\\\"text\\\" [(ngModel)] = \\\"selectedNodeNameTarget\\\" (ngModelChange)=\\\"updateSelectedOption($event, data)\\\" [disabled]=\\\"restoreOptions || disabledToBox\\\">\\n                            </div>\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"selectedType !== ADD_NEW_TYPE\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger deleteBtn left\\\" *ngIf=\\\"(popupConfig.editRelationPopup === true || editRelationPopup === true) && !restoreOptions\\\" style=\\\"color: white;\\\" (click)=\\\"activateDelete('deleteModal', 'relation')\\\">Delete</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" style=\\\"color: red;\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" (click)=\\\"submitRelModal()\\\" *ngIf=\\\"(popupConfig.createRelationPopup === true || createRelationPopup === true) && !restoreOptions\\\" [disabled]=\\\"selectedType?.length <= 0 || selectedNodeNameTarget?.length <= 0 || selectedNodeNameSource?.length <= 0\\\">Create</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" (click)=\\\"submitRelModal('edit')\\\" *ngIf=\\\"(popupConfig.editRelationPopup === true || editRelationPopup === true) && !restoreOptions\\\" [disabled]=\\\"selectedType?.length <= 0 || selectedNodeNameTarget?.length <= 0 || selectedNodeNameSource?.length <= 0\\\"\\n                    id=\\\"edit_btn\\\">Update</button>\\n                <button type=\\\"button\\\" id=\\\"restoreBtn\\\" class=\\\"btn btn-info restoreBtn\\\" *ngIf=\\\"(popupConfig.editRelationPopup === true || editRelationPopup === true) && restoreOptions\\\" style=\\\"color: white;\\\" (click)=\\\"restoreData('relation')\\\">Restore </button>\\n\\n            </div>\\n            <div class=\\\"modal-footer\\\" *ngIf=\\\"selectedType === ADD_NEW_TYPE\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary create\\\" id=\\\"edit_btn\\\" (click)=\\\"addNewLabel('relation')\\\">Add Type</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--modal relationship end-->\\n\\n<!-- Delete modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"deleteModal\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"deleteModalTitle\\\">Delete</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <b class=\\\"modal-text\\\" style=\\\"font-size: 17px; font-weight:500;\\\">Are you sure you want to delete this {{deleteContext}} ?</b>\\n                <h6 *ngIf=\\\"deleteContext === 'node'\\\" style=\\\"font-size: 14px; padding-top: 15px; font-weight: 400;\\\">[NOTE] : Deleting a node will also delete the relationships connected with the node. <span style=\\\"color: red;\\\">Proceed with caution</span></h6>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn ui-button-text later\\\" data-dismiss=\\\"modal\\\">Maybe Later</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"submitDelete(deleteContext)\\\" id=\\\"del_btn\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--Delete modal end-->\\n\\n<!--create new relationship after node modal-->\\n<div class=\\\"modal fade\\\" id=\\\"RelAfterNodeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"RelAfterNode\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"RelAfterNodeModalTitle\\\">New Relation</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <b class=\\\"modal-text\\\" style=\\\"font-size: 17px; font-weight:300;\\\">Do you wish to create a new relationship with respect to <span style=\\\"font-weight: 500;\\\">{{newNodeName}}</span> ?</b>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-target=\\\"RelAfterNodeModal\\\" data-dismiss=\\\"modal\\\" style=\\\"color: red;\\\">Not Now</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"promptRelation()\\\" id=\\\"rel_yes_btn\\\" data-dismiss=\\\"modal\\\">Yes</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!--create new relationship after node modal end-->\"","module.exports = \".container-fluid .btn-group {\\n  margin-right: 20px; }\\n  .container-fluid .btn-group button {\\n    border-radius: 50%;\\n    background: #e4e4e4;\\n    color: #000;\\n    box-shadow: 2px 9px 17px -1px #cccccc; }\\n  .container-fluid .btn-group button:active {\\n    box-shadow: none;\\n    transition: 0.5s; }\\n  .btn-group:active {\\n  outline: none;\\n  text-decoration: none; }\\n  .createLink,\\n.editLink,\\n.deleteLink {\\n  text-decoration: none;\\n  font-size: 12px; }\\n  .dropdown-menu .dropdown-item {\\n  cursor: pointer; }\\n  .dropdown-menu .dropdown-item span {\\n    margin-right: 8px; }\\n  .dropdown-menu .dropdown-item:active {\\n  background-color: white; }\\n  .dropdown-menu .create:hover {\\n  color: blue; }\\n  .dropdown-menu .edit:hover {\\n  color: green; }\\n  .dropdown-menu .delete:hover {\\n  color: red; }\\n  /* .modal-header {\\n    background: #5f5f5f;\\n    color: white;\\n    border-color: #5f5f5f;\\n    button.close {\\n        color: white;\\n    }\\n} */\\n  ::ng-deep .modalItem {\\n  padding: 10px; }\\n  ::ng-deep .modalItem .fa-info-circle {\\n    font-size: 14px;\\n    cursor: pointer; }\\n  ::ng-deep .modalItem.buttonContainer {\\n  position: relative; }\\n  ::ng-deep .sectionName {\\n  display: inline-block;\\n  margin: 0;\\n  max-width: 50%; }\\n  ::ng-deep .inputSpan {\\n  position: absolute;\\n  left: 50%; }\\n  ::ng-deep .inputSpan input {\\n    border: 1px solid #acacac;\\n    outline: none; }\\n  ::ng-deep .propertyLabel {\\n  padding-top: 13px;\\n  padding-bottom: 13px;\\n  text-align: center; }\\n  ::ng-deep .supportIcons {\\n  position: absolute;\\n  right: 6%;\\n  cursor: pointer;\\n  cursor: pointer;\\n  color: red; }\\n  ::ng-deep .supportIcons.customDelete {\\n  font-size: 20px; }\\n  input#propertyKey {\\n  height: 30px; }\\n  ::ng-deep .newLink {\\n  float: right;\\n  padding: 5px 7px; }\\n  .newLink2 {\\n  position: absolute;\\n  right: 0;\\n  top: 12px;\\n  padding: 5px 7px; }\\n  .lower {\\n  margin-top: 30px; }\\n  .newLink:hover,\\n.newLink2:hover {\\n  background-color: #5f5f5f;\\n  color: white !important;\\n  transition: .5s;\\n  cursor: pointer;\\n  border-radius: 5px; }\\n  .newTemplate {\\n  max-width: 35% !important; }\\n  .newTemplate div {\\n    max-width: 100%; }\\n  i.fas.fa-info-circle {\\n  color: black !important; }\\n  input[disabled=\\\"true\\\"] {\\n  cursor: not-allowed; }\\n  button:disabled {\\n  cursor: not-allowed;\\n  pointer-events: all !important; }\\n  .deleteBtn,\\n.mailBtn,\\n.restoreBtn {\\n  cursor: pointer !important; }\\n  .later {\\n  text-decoration: none;\\n  cursor: pointer; }\\n  .later:hover {\\n  background-color: #5f5f5f;\\n  color: white; }\\n  .mailBtn,\\n.left {\\n  margin-right: auto; }\\n  .mailBtn {\\n  padding: 5px 8px; }\\n  .mailBtn:hover {\\n  transition: 0.5s;\\n  background: #e4e4e4;\\n  border-radius: .25rem;\\n  color: #000;\\n  box-shadow: 2px 9px 17px -1px #cccccc; }\\n  .mailBtn:active {\\n  box-shadow: none;\\n  transition: .5s; }\\n  ::ng-deep .newPropertyGroup {\\n  width: 100%;\\n  display: block;\\n  background: #cccccc; }\\n  ::ng-deep .normalTextBox {\\n  max-width: 14em; }\\n  ::ng-deep .typeTextBox {\\n  max-width: 20em; }\\n  .typeTextBox input {\\n  border-bottom-left-radius: 0;\\n  border-top-left-radius: 0; }\\n  .ui.input.typeTextBox {\\n  width: 14em; }\\n  #id_newLabelNode {\\n  padding-left: 3px; }\\n  .circularBtn {\\n  font-size: 1.5rem;\\n  width: 40px;\\n  padding-left: 0px;\\n  border-radius: 50%;\\n  height: 40px;\\n  border: 0;\\n  box-shadow: 2px 9px 17px -1px #cccccc; }\\n  .circularBtn img {\\n    width: 40px; }\\n  .circularBtn:active {\\n  box-shadow: none;\\n  transition: .5s; }\\n  .circularBtn:focus {\\n  outline: 0; }\\n  .algorithms {\\n  padding-right: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {\n  Component, OnInit, EventEmitter, Output, \n  Input, OnChanges, SimpleChanges,DoCheck\n} from '@angular/core';\n\nimport {SearchService} from './../../../shared/services/search-service/search.service';\nimport * as _ from 'lodash';\nimport { GraphDataService } from 'src/app/modules/core/services/graph-data-service/graph-data.service';\nimport { map} from 'rxjs/operators';\n\nimport { SharedGraphService } from './../../../core/services/shared-graph.service';\nimport { FormBuilder } from '@angular/forms';\nimport { of } from 'rxjs';\nimport {MaterialService} from './../../../custom-material/services/material-core/material.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-create-nodes',\n  templateUrl: './create-nodes.component.html',\n  styleUrls: ['./create-nodes.component.scss']\n})\n\nexport class CreateNodesComponent implements OnInit, OnChanges, DoCheck {\n\n  // Output variables for event emitters to parent components\n  @Output() nodeBtnEvent = new EventEmitter<any>();\n  @Output() edgeBtnEvent = new EventEmitter<any>();\n  @Output() cleanData = new EventEmitter<string>();\n  @Output() restoreEvent = new EventEmitter<any>();\n  // input variables from parent components\n  @Input() editData: any;\n  @Input() editRelData: any;\n  @Input() hideDelModal: any;\n  @Input() nodeTypes: Array<any> = [];\n  @Input() newNodeCreated: object | null = null;\n  @Input() restoredDataResponse: object | null = null;\n  // constants\n  public TYPE_TEXT = 'Type';\n  public ADD_NEW_LABEL = 'Add New Label';\n  public ADD_NEW_TYPE = 'Add New Type';\n  public ADD_NEW_PROPERTY = 'Add New Property';\n  public toolTipText = '';\n  public deleteContext = 'node';\n  public newNodeName = 'Not Available';\n  public newTypeColor: string | null = null;\n  // object to handle modals\n  public popupConfig = {\n    createNodePopup: false,\n    editNodePopup: false,\n    deleteNodePopup: false,\n    createRelationPopup: false,\n    editRelationPopup: false,\n    deleteRelationPopup: false\n  };\n\n  // modal specific variables\n    public createNodePopup = false;\n    public editNodePopup = false;\n    public deleteNodePopup = false;\n    public createRelationPopup = false;\n    public editRelationPopup = false;\n    public deleteRelationPopup = false;\n    public restoreOptions = false;\n\n    public disabledBox = false;\n    public enableNewTemplate = false;\n    public clickedNodeID = null;\n    public clickedRelationID = null;\n    public disabledFromBox = false;\n    public disabledToBox = false;\n    public relationSourceNode = null;\n    public relationTargetNode = null;\n    public nodeTypes2: Array<any> = [];\n    public selectedType: any = [];\n    public typeOptions: Array<any> = [];\n    public processedData;\n    public labelProperties = [];\n    public relationTypeOptions: Array<any> = [];\n    public typeProperties: any[] = [];\n    public relationsData: any;\n    public toNames: any[] = [];\n    public fromNames: any[] = [];\n    public selectedNodeNameSource: any;\n    public selectedNodeNameTarget: any;\n    public editNodeConfig = {};\n    public deleteNodeConfig = {};\n    public totalNodesProperties = {};\n    public totalRelationsProperties = {};\n    public availablePropertyList = {};\n    public selectedPropertiesObject = {};\n    public showDeletedData = false;\n    public totalName = [];\n\n    // private variables to be used by the class\n    private allowedRestoreEvents = ['node','relation'];\n    constructor(\n      private SharedSrvc: SearchService,\n      private graphSrvc: GraphDataService,\n      private sharedGraphSrvc: SharedGraphService,\n      private fb: FormBuilder,\n      private snackbar: MaterialService) {\n    }\n\n  ngOnInit() {\n    this.toolTipText = 'The Properties section can be left blank to set a default Node';\n    $('.toolTipText').tooltip();\n    // to set total node and relation properties\n    this.sharedGraphSrvc.totalNodesProperties.subscribe(data=>{\n      if(data){\n        this.totalNodesProperties = _.cloneDeep(data);\n        this.totalName = this.totalNodesProperties['name'];\n        // to change format for lookup option\n        this.totalName = this.totalName.map(name => {\n          return { key: name };\n        });\n      }\n    });\n    this.sharedGraphSrvc.totalRelationsProperties.subscribe(data=>{\n      this.totalRelationsProperties = data;\n    });\n    // to set processedData and nodeTypes2\n    this.sharedGraphSrvc.processedData.subscribe(data=>{\n      this.processedData = data;\n    })\n    this.sharedGraphSrvc.nodeTypes2.subscribe(data=>{\n      this.nodeTypes2 = data;\n    })\n    this.sharedGraphSrvc.relationTypeOptions.subscribe(data=>{\n      this.relationTypeOptions = data;\n    })\n    this.sharedGraphSrvc.relationsData.subscribe(data=>{\n      this.relationsData = data;\n    })\n\n    this.sharedGraphSrvc.showDeletedData.subscribe(toggle => {\n      if (toggle !== null && (toggle.toString() === 'true' || toggle.toString() === 'false')) {\n        // if the toggle variable is  only true and false and nothing else\n        this.showDeletedData = toggle;\n        // console.log('recieved toggle in create nodes', toggle);\n      } else {\n        // set to false by default\n        this.showDeletedData = false;\n      }\n    }, err => {\n      // set to false by default\n      console.error('An error occured while subscribing to the toggle for deleted data', err);\n      this.showDeletedData = false;\n    });\n  }\n\n\n  createNode() {\n    this.popupConfig.createNodePopup = true;\n    this.createNodePopup = true;\n    this.disabledBox = false;\n    this.enableNewTemplate = false;\n      let index = this.nodeTypes2.indexOf(this.ADD_NEW_LABEL);\n      if(index < 0){\n        let newOptions = this.nodeTypes2;\n        newOptions = this.pushOnTop(this.ADD_NEW_LABEL, newOptions);\n        this.typeOptions = _.cloneDeep(newOptions);\n      }\n      // add the option to add a new label on top\n    \n  }\n\n  pushOnTop(valueToAdd = 'null', ArrayToUse, index = 0) {\n    // this function will push the given value in the array at specified index, default for 0\n    if (ArrayToUse.length <= 0) {\n      return [];\n    }\n    if (valueToAdd === 'null' && ArrayToUse.length > 0) {\n      return ArrayToUse;\n    }\n    if (valueToAdd !== 'null' && ArrayToUse.length >= 0) {\n      ArrayToUse.splice(index, 0, valueToAdd);\n      return ArrayToUse;\n    }\n  }\n  editNode() {\n    this.disabledBox = true;\n    // this will send the edit event and then the app will wait for the node click event sent back to this component\n    this.nodeBtnEvent.emit({ type: 'click', action: 'edit' });\n  }\n\n  createRelation() {\n    this.setAllToFalse('relation');\n    this.popupConfig.createRelationPopup = _.cloneDeep(true);\n    this.createRelationPopup = true;\n    this.enableNewTemplate = false;\n    this.disabledBox = false;\n      let extractedTypes = this.relationTypeOptions;\n      // add the new type option on top\n      let index = extractedTypes.indexOf(this.ADD_NEW_TYPE);\n      if(index < 0){\n        extractedTypes = this.pushOnTop(this.ADD_NEW_TYPE, extractedTypes);\n      }\n      // pass it into the options for dropdown\n      this.relationTypeOptions = _.cloneDeep(extractedTypes);\n      return true;\n    console.log('variables values are ', this.popupConfig.createRelationPopup + ' ' + this.createRelationPopup);\n  }\n\n  editRelation() {\n    this.edgeBtnEvent.emit({ type: 'click', action: 'edit' });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hideDelModal === true) {\n      // hide the delete modal\n      this.hideModal('deleteModal');\n      this.hideModal('createNodeModal');\n      this.hideModal('createRelationModal');\n      this.editData = null;\n      this.editRelData = null;\n\n    }\n    $('#RelAfterNodeModal').on('hidden.bs.modal', (e) => {\n      this.newNodeCreated = null;\n      this.newNodeName = null;\n      // this.createNodePopup = false;\n      this.editNodePopup = false;\n      this.editRelationPopup = false;\n      this.deleteNodePopup = false;\n      this.deleteRelationPopup = false;\n      this.setAllToFalse('node');\n      this.cleanData.emit('afterCreateNode');\n    });\n    $('#createNodeModal').on('hidden.bs.modal', (e) => {\n      // this event will reset the popupConfig object so that everytime correct data is accessed\n      this.setAllToFalse('node');\n      this.createNodePopup = false;\n      this.createRelationPopup = false;\n      this.editNodePopup = false;\n      this.editRelationPopup = false;\n      this.deleteNodePopup = false;\n      this.deleteRelationPopup = false;\n      this.editData = null;\n      // clear the selected color\n      this.newTypeColor = null;\n      this.cleanData.emit('node');\n    });\n    $('#createRelationModal').on('hidden.bs.modal', (e) => {\n      // this event will reset the popupConfig object so that everytime correct data is accessed\n      this.setAllToFalse('relation');\n      this.createNodePopup = false;\n      // this.createRelationPopup = false;\n      this.editNodePopup = false;\n      this.editRelationPopup = false;\n      this.deleteNodePopup = false;\n      this.deleteRelationPopup = false;\n      this.cleanData.emit('relation');\n      this.fromNames = [];\n      this.toNames = [];\n    });\n\n    if ((!!this.editData && !!this.editData.length) || (!!this.editData && !!Object.keys(this.editData).length)) {\n      this.disabledBox = true;\n      // store the data in internal variable and clear this\n      let editNodeData = _.cloneDeep(this.editData);\n\n      this.editData = _.cloneDeep(null);\n      // console.log('edit data recieved is ', editNodeData);\n      this.editNodeConfig = _.cloneDeep({\n        properties: editNodeData['properties'],\n        type: editNodeData['type'][0],\n        id: editNodeData['id']\n      });\n      this.clickedNodeID = _.cloneDeep(this.editNodeConfig['id']);\n      // console.log('editNodeConfig is ', this.editNodeConfig);\n      this.selectedType = null;\n      // check if the node is already deleted or not, if yes, simply don't let the user to update it\n      // tslint:disable-next-line: max-line-length\n      if (\n        this.editNodeConfig['properties'].hasOwnProperty('deleted') &&\n        (this.editNodeConfig['properties']['deleted'] === 'true' || this.editNodeConfig['properties']['deleted'] === true)\n        ) {\n        // make changes so that user cannot update the node but rather restore it\n        console.log('recieved node is deleted type');\n        // let responseBool = true;\n        window.setTimeout( () => {\n          this.restoreOptions = true;\n        }, 0);\n      } else {\n        window.setTimeout( () => {\n          this.restoreOptions = false;\n        }, 0);\n        console.log('restore options is false for this node');\n      }\n        this.typeOptions = _.cloneDeep(this.nodeTypes2);\n        this.selectedType = this.editNodeConfig['type'];\n        // trigger update properties to show data before hand\n        this.updateProperties(this.selectedType, this.editNodeConfig);\n        const prefilledInfo = this.recreatePrefilledData(editNodeData['properties']);\n        if (!!prefilledInfo) {\n          // console.log('recieved some prefilled info ', prefilledInfo);\n          // set the data into the modal\n          this.prefillData('createNodeModal', prefilledInfo, this.editNodeConfig['id']);\n        } else {\n          // will allow the modal to be visible anyway\n          console.error('An error occured while prefilling the data, did not recieve anyhting');\n        }\n    } else if ((!!this.editRelData && !!this.editRelData.length) || (!!this.editRelData && !!Object.keys(this.editRelData).length)) {\n      // execute this portion if edit relationship is triggred\n      this.popupConfig.editRelationPopup = true;\n      this.editRelationPopup = true;\n      console.log('recieved edit relation data is ', this.editRelData);\n      this.disabledBox = true;\n      let editRelConfig = {\n        id: this.editRelData['id'],\n        type: this.editRelData['type'],\n        properties: this.editRelData['properties'],\n        from: this.editRelData['from'],\n        to: this.editRelData['to']\n      };\n      this.clickedRelationID = _.cloneDeep(editRelConfig['id']);\n\n      // tslint:disable-next-line: max-line-length\n      if (\n        editRelConfig['properties'].hasOwnProperty('deleted') &&\n        (editRelConfig['properties']['deleted'] === 'true' || editRelConfig['properties']['deleted'] === true)\n        ) {\n        // make changes so that user cannot update the node but rather restore it\n        console.log('recieved relation is deleted type');\n        let responseBool = true;\n        this.restoreOptions = _.cloneDeep(responseBool);\n      } else {\n        let responseBool = false;\n        this.restoreOptions = _.cloneDeep(responseBool);\n      }\n      console.log('fetched relationship types successfully');\n        // once types are loaded, set a default type which is the type of selected relation\n        // relationTypeOptions are already set\n        this.selectedType = editRelConfig['type'];\n        this.updateRelProperties(this.selectedType, editRelConfig);\n        const prefilledRelInfo = this.recreatePrefilledData(editRelConfig['properties']);\n\n        // disable the from and to boxes\n        this.disabledFromBox = true;\n        this.disabledToBox = true;\n        this.prefillData('createRelationModal', prefilledRelInfo, editRelConfig['id'], 'relation');\n        // prefill the connected nodes names for the selected relationship modal\n        this.prefillConnectedNodes(editRelConfig);\n        this.sharedGraphSrvc.nodeDetails.subscribe(nodeDetailsArray => {\n          // this variable will have arrays of nodes in same sequesnce the ids were sent\n          console.log('recieved connected node information', nodeDetailsArray);\n          this.selectedNodeNameSource = nodeDetailsArray[0]['label'] || '';\n          this.selectedNodeNameTarget = nodeDetailsArray[1]['label'] || '';\n        });\n      // open the edit modal\n      this.disabledBox = true;\n      this.showModal('createRelationModal');\n    }\n    // detect if a new node is entered into the graph, prompt user to create a relationship\n    if (!!this.newNodeCreated && Object.keys(this.newNodeCreated).length) {\n      // new node has been created, prompt the user\n      // Do you wish to create a new relationship with respect to {{node_name}} ?\n      if (this.newNodeCreated.hasOwnProperty('created') && this.newNodeCreated['created']) {\n        if (this.newNodeCreated.hasOwnProperty('node')) {\n          this.newNodeName = this.newNodeCreated['node']['label'] || 'Not Available';\n          // enable the prompt\n          this.setAllToFalse('node');\n          this.setAllToFalse('relation');\n          this.showModal('RelAfterNodeModal');\n        }\n      }\n    }\n    // detect if nodes / relationships have been restored successfully\n    console.log('restored recieved options are ', this.restoredDataResponse);\n    if (!!this.restoredDataResponse && Object.keys(this.restoredDataResponse).length) {\n      console.log('Recieved restored information as ', this.restoredDataResponse);\n      if (\n        this.restoredDataResponse.hasOwnProperty('nodes') &&\n        Array.isArray(this.restoredDataResponse['nodes']) &&\n        this.restoredDataResponse['nodes'].length > 0) {\n        // hide the node modal\n        this.hideModal('createNodeModal');\n        this.cleanData.emit('node');\n        this.cleanData.emit('relation');\n        this.cleanData.emit('restore');\n      }\n      if (\n        this.restoredDataResponse.hasOwnProperty('relations') &&\n        Array.isArray(this.restoredDataResponse['relations']) &&\n        this.restoredDataResponse['relations'].length > 0) {\n        // hide the node modal\n        this.hideModal('createRelationModal');\n      }\n      window.setTimeout(() => {\n        this.restoreOptions = false;\n      }, 0);\n      // clean all the events\n      this.cleanData.emit('restore');\n      this.cleanData.emit('node');\n      this.cleanData.emit('relation');\n    }\n  }\n\n  prefillConnectedNodes(RelationData) {\n    if (RelationData.hasOwnProperty('from') && RelationData.hasOwnProperty('to')) {\n      let nodeIDs = _.cloneDeep([RelationData['from'], RelationData['to']]);\n      this.fetchNodeNameFromID(nodeIDs);\n    }\n  }\n\n  fetchNodeNameFromID(nodeIDArray, isRestore = false) {\n    // this function will send the node id to the graph visualilzer which has all the information of the nodes\n    // the graph visualizer will fetch the node details using the provided node id and send the details back here\n    if (!!nodeIDArray.length) {\n      console.log('asking for details of ', nodeIDArray);\n      this.sharedGraphSrvc.getNodeDetails(nodeIDArray, isRestore);\n    } else {\n      console.warn('nodeID was not valid while sending event to read node details');\n    }\n  }\n\n  prefillData(modalID, dataToFill, IDToSupply, type = 'node') {\n    if (!modalID) {\n      console.warn('cannot prefill data as modal id is not supplied');\n    } else {\n      // both are supplied, time to prefill the modal\n      if ($(`#${modalID}`).length) {\n        if (type === 'node') {\n          this.popupConfig.editNodePopup = true;\n          this.editNodePopup = true;\n        } else if (type === 'relation') {\n          this.popupConfig.editRelationPopup = true;\n          this.editRelationPopup = true;\n        }\n        this.showModal(modalID);\n        // found the modal\n        $(`#${modalID}`).on('shown.bs.modal', (event) => {\n          this.selectedPropertiesObject = _.cloneDeep(dataToFill);\n          // capture the modal text boxes once it is visible\n          /* $(`#${modalID} :text`).each(function() {\n            let key = $(this).attr('id') || null;\n            if (!!dataToFill) {\n              if (Object.keys(dataToFill).indexOf(key) > -1) {\n                // assign this text box a prefilled value from dataToFill\n                $(`[id='${key}']`).val(dataToFill[key]);\n                // disable the Name box since it is unique fot the database\n                /* if (key === 'id_Name') {\n                  $(`[id='${key}']`).attr('disabled', 'disabled');\n                }\n              }\n            }\n          }); */\n\n          // add id of the node to the modal\n          if (!this.restoreOptions) {\n            this.addAttribute('edit_btn', `${type}_id`, IDToSupply);\n          } else {\n            this.addAttribute('restoreBtn', `${type}_id`, IDToSupply);\n          }\n        });\n      } else {\n        console.warn('did not find any element with provided ID');\n      }\n    }\n  }\n\n  addAttribute(elementID, attributeKey, attributeValue) {\n    $(`[id='${elementID}']`).attr(attributeKey, attributeValue);\n\n  }\n\n  recreatePrefilledData(prefilledData) {\n    // main purpose is to attach id_ to the object keys so that it can be used to find elements in the modal\n    if (Object.keys(prefilledData).length > 0) {\n      // iterate on the keys and rename them\n      // let prefilledObj = {};\n      /* Object.keys(prefilledData).forEach(key => {\n        // let newKey = `id_${key}`;\n\n        prefilledObj[newKey] = prefilledData[key];\n      }); */\n      return prefilledData;\n    }\n    else { return null }\n  }\n\n  showModal(modalID) {\n    $(`#${modalID}`).modal('show');\n  }\n\n  hideModal(modalID) {\n    $(`#${modalID}`).modal('hide');\n  }\n\n  setAllToFalse(setFor) {\n    Object.keys(this.popupConfig).forEach(key => {\n      if (this.popupConfig[key]) {\n        this.popupConfig[key] = false;\n      }\n    });\n    // reset common properties\n    this.selectedType = _.cloneDeep([]);\n    this.disabledBox = false;\n    this.enableNewTemplate = false;\n    if (setFor === 'node') {\n      this.createNodePopup = false;\n      this.editNodePopup = false;\n      this.labelProperties = [];\n      this.availablePropertyList = _.cloneDeep({});\n      this.deleteNodePopup = false;\n      this.selectedPropertiesObject = _.cloneDeep({});\n    } else if (setFor === 'relation') {\n      this.disabledFromBox = false;\n      this.disabledToBox = false;\n      this.selectedNodeNameSource = null;\n      this.selectedNodeNameTarget = null;\n      this.typeProperties = [];\n      this.createRelationPopup = false;\n      this.editRelationPopup = false;\n      this.deleteRelationPopup = false;\n    }\n  }\n\n  submitModal(type = 'create') {\n    let nodeData = {\n      id: null,\n      properties: {},\n      type: null\n    };\n    nodeData.type = [this.selectedType];\n    /* $('#createNodeModal :text').each(function () {\n      let key = $(this).attr('id') || null;\n      let value = $(this).val() || null;\n      nodeData.properties[key] = value;\n    }); */\n    console.log('properties object on submit is  ', this.selectedPropertiesObject);\n    // pass the captured data into the object and move ahead\n    nodeData.properties = _.cloneDeep(this.selectedPropertiesObject);\n    // Add the selected color to this new type, if selected\n    nodeData.properties = this.addNewColorInProperties(nodeData.properties);\n    try {\n      nodeData = this.validateNodeData(nodeData);\n      // hide the modal once the data is created properly\n      $('#createNodeModal').modal('hide');\n      if (type === 'create') {\n        this.insertIntoPropertyList(nodeData.properties);\n        this.nodeBtnEvent.emit({ type: 'click', action: 'create', data: nodeData });\n        this.popupConfig.createNodePopup = false;\n        this.createNodePopup = false;\n        this.setAllToFalse('node');\n      } else if (type === 'edit') {\n        // add the updated properties if any, to the availablePropertyList for future use\n        this.insertIntoPropertyList(nodeData.properties);\n        this.nodeBtnEvent.emit({ type: 'click', action: 'edit', data: nodeData, process: 'complete' });\n        this.popupConfig.editNodePopup = false;\n        this.editNodePopup = false;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  addNewColorInProperties(properties) {\n    if (this.newTypeColor) {\n      // user selected a color code\n      properties['color'] = this.newTypeColor;\n    }\n    return properties;\n  }\n\n\n  submitRelModal(type = 'create') {\n    let nodeData = null;\n    let relationData = null;\n    let sourceNode = null;\n    let targetNode = null;\n\n    if (type === 'create') {\n      nodeData = {\n        Name: null\n      };\n      sourceNode = _.cloneDeep(nodeData);\n      targetNode = _.cloneDeep(nodeData);\n      sourceNode.Name = this.selectedNodeNameSource;\n      targetNode.Name = this.selectedNodeNameTarget;\n    }\n\n    relationData = {\n      type: null,\n      properties: {}\n    };\n\n    relationData.type = [this.selectedType];\n\n\n    // extract properties from modal if entered\n    /* $('#createRelationModal :text').each(function() {\n      let key = $(this).attr('id') || null;\n      let value = $(this).val() || null;\n      relationData.properties[key] = value;\n      }); */\n    console.log('properties object on submit rel is  ', this.selectedPropertiesObject);\n\n    relationData.properties = _.cloneDeep(this.selectedPropertiesObject);\n    try {\n      relationData = this.validateRelationData(relationData);\n      console.log('relationship created is ', relationData);\n      // add the source and target nodes of this relation\n      if (type === 'create') {\n        relationData['from'] = sourceNode.Name;\n        relationData['to'] = targetNode.Name;\n      }\n      relationData['id'] = relationData['id'];\n      this.insertIntoPropertyList(relationData.properties);\n      this.edgeBtnEvent.emit({ type: 'click', action: `${type}`, data: relationData });\n      // hide the modal once the data is created properly\n      $('#createRelationModal').modal('hide');\n    }\n    catch (e) {\n      console.log(e);\n    }\n    // clear from to data\n    this.fromNames = [];\n    this.fromNames = [];\n  }\n\n  insertIntoPropertyList(propertiesToUpdate) {\n    // the  purpose of this function is to update the global availablePropertyList\n    if (Object.keys(propertiesToUpdate).length > 0) {\n      Object.keys(propertiesToUpdate).forEach(property => {\n        /* if (Object.keys(this.availablePropertyList).indexOf(property) > -1) {\n          debugger;\n          let propertyList = this.availablePropertyList[property]['list'];\n          if (propertyList.indexOf(propertiesToUpdate[property]) <= -1) {\n            // will enter here if the property Name is already present but the new value not present\n            this.availablePropertyList[property]['list'].push(propertiesToUpdate[property]);\n\n          } else {\n            let sol = propertiesToUpdate[property];\n          }\n        } */\n        if (Object.keys(this.totalNodesProperties).indexOf(property) > -1) {\n          let propertyList = this.totalNodesProperties[property];\n          if (propertyList.indexOf(propertiesToUpdate[property]) <= -1) {\n            this.totalNodesProperties[property].push(propertiesToUpdate[property]);\n          }\n        } else {\n          this.totalNodesProperties[property] = [];\n          this.totalNodesProperties[property].push(propertiesToUpdate[property]);\n        }\n        if (Object.keys(this.totalRelationsProperties).indexOf(property) > -1) {\n          let propertyList = this.totalRelationsProperties[property];\n          if (propertyList.indexOf(propertiesToUpdate[property]) <= -1) {\n            this.totalRelationsProperties[property].push(propertiesToUpdate[property]);\n          }\n        } else {\n          this.totalRelationsProperties[property] = [];\n          this.totalRelationsProperties[property].push(propertiesToUpdate[property]);\n        }\n      });\n      // this.availablePropertyList = _.cloneDeep(this.availablePropertyList);\n    }\n  }\n\n  validateNodeData(nodeObj) {\n\n    if (Object.keys(nodeObj).length > 0) {\n      if (nodeObj.hasOwnProperty('type') && nodeObj.type.length > 0) {\n        if (nodeObj.hasOwnProperty('properties') && Object.keys(nodeObj.properties).length > 0) {\n          return this.cleanNodeData(nodeObj);\n        } else {\n          throw new Error('Cannot create a node with no Name');\n        }\n      } else {\n        throw new Error('Cannot create a node with no Type');\n      }\n    } else {\n      throw new Error('Cannot create a node with no details');\n    }\n  }\n  validateRelationData(relationObj) {\n    if (Object.keys(relationObj).length > 0) {\n      if (relationObj.hasOwnProperty('type') && relationObj.type.length > 0) {\n        if (relationObj.hasOwnProperty('properties') && Object.keys(relationObj.properties).length > 0) {\n          return this.cleanRelationshipData(relationObj);\n        } else {\n          // user did not specify any properties, its okay\n        }\n      } else {\n        throw new Error('Cannot create a relation with no Type');\n      }\n    } else {\n      throw new Error('cannot create a relation with no details');\n    }\n  }\n\n  generateID() {\n    // this function generates a new id for a the node which will be unique, currently deprecated\n    return Math.floor(Date.now() + Math.random());\n  }\n\n  processData(data) {\n    if (data.length > 0) {\n      let tempData = [];\n      data.forEach(label => {\n        tempData.push({ type: label._fields[1], properties: label._fields[0] });\n      });\n      return tempData;\n    } else return [];\n  }\n\n  extractLabels(data) {\n    this.nodeTypes2 = [];\n    data.forEach(label => {\n      this.nodeTypes2.push(label.type[0]);\n    });\n    // console.log('types are ', this.nodeTypes2);\n  }\n\n  updateProperties(event, editProperties = null) {\n    // fetch the properties of selected label and display it in the dropdown\n    // console.log(event)\n    if (event === this.ADD_NEW_LABEL) {\n      this.TYPE_TEXT = 'New Type';\n      console.log('user wants to add a new label');\n    }\n    else {\n      this.TYPE_TEXT = 'Type';\n      if (!editProperties || !editProperties.hasOwnProperty('properties')) {\n        editProperties = null;\n        this.selectedPropertiesObject = _.cloneDeep({});\n      } else {\n        editProperties = editProperties['properties'];\n      }\n      this.labelProperties = this.getProperties([event], editProperties);\n    }\n  }\n\n  updateRelProperties(event, relProperties = null) {\n    // fetch the properties of selected type and display it in the dropdown\n    if (!relProperties || !relProperties.hasOwnProperty('properties')) {\n      relProperties = null;\n      this.selectedPropertiesObject = _.cloneDeep({});\n    } else {\n      relProperties = relProperties['properties'];\n    }\n    this.typeProperties = this.getRelProperties([event], relProperties);\n  }\n\n  getProperties(labelName, editProperties = null) {\n    if (labelName.length > 0) {\n      let fetchedProperties = [];\n      // if properties are supplied, use them else fetch from the processed data\n      if (!!editProperties) {\n        Object.keys(editProperties).forEach(property => {\n          if (property !== 'Type') {\n            fetchedProperties.push(property);\n          }\n        });\n      } else {\n        this.processedData.forEach(labelObj => {\n          if (labelObj.type[0] === labelName[0]) {\n            fetchedProperties = labelObj.properties;\n          }\n        });\n        // if fetched properties is empty, means this is a new Type the user has selected\n        // Add 2 properties to this TYPE : Name and deleted with deleted = false by default\n        if (!fetchedProperties.length) {\n          fetchedProperties.push('Name');\n          fetchedProperties.push('deleted');\n        }\n      }\n      // put Name property in the first position\n      fetchedProperties.forEach((property, index) => {\n        if (property === 'Name' && index !== 0) {\n          fetchedProperties = this.swap(fetchedProperties, index, 0);\n        }\n      });\n      // before sending back, set the available property list for each property\n      this.setPropertyList(fetchedProperties);\n\n      return fetchedProperties.filter(ele => {\n        return (ele !== 'deleted' && ele !== 'color');\n      });\n    } else {\n      return [];\n    }\n  }\n\n  getRelProperties(relType: Array<string>, relProperties = null): any {\n    if (relType.length > 0) {\n      let fetchedProperties = [];\n      if (!!relProperties) {\n        Object.keys(relProperties).forEach(property => {\n          if (property !== 'Type') {\n            fetchedProperties.push(property);\n          }\n        });\n      }\n      else {\n        this.relationsData.forEach(Obj => {\n          if (Obj.type === relType[0]) {\n            fetchedProperties = Obj['properties'];\n          }\n        });\n\n        if (!fetchedProperties.length) {\n          fetchedProperties.push('deleted');\n        }\n      }\n\n      fetchedProperties.forEach((property, index) => {\n        if (property === 'Name' && index !== 0) {\n          fetchedProperties = this.swap(fetchedProperties, index, 0);\n        }\n      });\n      // before sending back, set the available property list for each property\n      this.setPropertyList(fetchedProperties);\n\n      return fetchedProperties.filter(el => {\n        return el !== 'deleted';\n      });\n    } else {\n      return [];\n    }\n  }\n\n  setPropertyList(propertyKeyList) {\n    // this function will keep updating the global allPropertyList whenever new set of properties are recieved\n    try {\n      propertyKeyList.forEach((propertyName, index) => {\n        if (!Object.keys(this.availablePropertyList).length) {\n          // this is the first entry\n          this.availablePropertyList[propertyName] = { list: [], enableNewProperty: false };\n          this.availablePropertyList[propertyName]['list'] = this.getcollectedProperties(propertyName);\n        } else {\n          // update the key\n          if (Object.keys(this.availablePropertyList).indexOf(propertyName) > -1) {\n            this.availablePropertyList[propertyName]['list'] = this.getcollectedProperties(propertyName);\n          } else {\n            this.availablePropertyList[propertyName] = { list: [], enableNewProperty: false };\n            this.availablePropertyList[propertyName]['list'] = this.getcollectedProperties(propertyName);\n          }\n        }\n        // tslint:disable-next-line: max-line-length\n        this.availablePropertyList[propertyName]['list'] = this.pushOnTop(this.ADD_NEW_PROPERTY, this.availablePropertyList[propertyName]['list']);\n      });\n      // now add a default key of 'Add new Property' in each list\n      // once the objectis prepared, create another object to store the info of selected value\n      this.initiatePropertiesValues();\n    } catch (e) {\n      console.warn('Illegal propertyKeyList array supplied in setPropertyList', e);\n      this.availablePropertyList = {};\n    }\n  }\n\n  initiatePropertiesValues() {\n    Object.keys(this.availablePropertyList).forEach(key => {\n      this.selectedPropertiesObject[key] = '';\n    });\n    // remove the deleted key if present\n    if (Object.keys(this.selectedPropertiesObject).indexOf('deleted') > -1) {\n      delete this.selectedPropertiesObject['deleted'];\n    }\n    console.log('propertyObject looks like ', this.selectedPropertiesObject);\n  }\n\n  getcollectedProperties(propertyName) {\n    if (!propertyName) {\n      return [];\n    }\n    let combinedPropertyList = [];\n    // find the collected property values of given propertyName from totalNodeProperties and totalRelationProperties and fill it\n    if (Object.keys(this.totalNodesProperties).indexOf(propertyName) > -1) {\n      combinedPropertyList.push(...this.totalNodesProperties[propertyName]);\n    }\n    if (Object.keys(this.totalRelationsProperties).indexOf(propertyName) > -1) {\n      combinedPropertyList.push(...this.totalRelationsProperties[propertyName]);\n    }\n    // make them unique and order by alphabets\n    combinedPropertyList = _.orderBy(combinedPropertyList);\n    combinedPropertyList = _.uniq(combinedPropertyList);\n    return combinedPropertyList;\n  }\n\n  swap(ArrayForSwapping, swapFromIndex, swapToIndex) {\n    const temp = ArrayForSwapping[swapFromIndex];\n    ArrayForSwapping[swapFromIndex] = ArrayForSwapping[swapToIndex];\n    ArrayForSwapping[swapToIndex] = temp;\n    return ArrayForSwapping;\n  }\n\n  removeDirtyData(dataObj) {\n    let newPropertyObject = {};\n    Object.keys(dataObj.properties).forEach(property => {\n      if (property !== null && property !== undefined) {\n        // remove the id_ prefix in the key\n        property = property.split('id_')[0];\n        newPropertyObject[property] = dataObj.properties[property];\n        if (!newPropertyObject[property]) {\n          newPropertyObject[property] = 'not available';\n        }\n      }\n    });\n    // remove all undefined keys\n    if (newPropertyObject.hasOwnProperty('undefined')) {\n      delete newPropertyObject['undefined'];\n    }\n    if (newPropertyObject.hasOwnProperty('Type')) {\n      delete newPropertyObject['Type'];\n    }\n    return newPropertyObject;\n  }\n\n  cleanNodeData(nodeObj) {\n    let newPropertyObject = {};\n    // remove any null properties\n    newPropertyObject = this.removeDirtyData(nodeObj);\n    // assign it back to the original data\n    nodeObj.properties = _.cloneDeep(newPropertyObject);\n    console.log('new properties are ', nodeObj);\n    // assign a unique id to the node\n    nodeObj['id'] = this.generateID();\n    if (this.popupConfig.editNodePopup === true) {\n      // assign the node id\n      this.disabledBox = true;\n      let nodeID = !isNaN($(`#edit_btn`).attr('node_id')) ? $(`#edit_btn`).attr('node_id') : null;\n      console.log('node id is ', nodeID);\n      nodeObj['id'] = nodeID;\n    }\n    // get the type array removed\n    nodeObj['type'] = nodeObj['type'][0];\n    return nodeObj;\n  }\n\n  cleanRelationshipData(relation) {\n    let relationshipProperties = {};\n    // remove any null properties\n    relationshipProperties = this.removeDirtyData(relation);\n    relation.properties = _.cloneDeep(relationshipProperties);\n    if (this.popupConfig.editRelationPopup === true) {\n      // assign the node id\n      this.disabledBox = true;\n      const relationID = !isNaN($(`#edit_btn`).attr('relation_id')) ? $(`#edit_btn`).attr('relation_id') : null;\n      console.log('relation id is ', relationID);\n      relation['id'] = relationID;\n    }\n    relation['type'] = relation['type'][0];\n    return relation;\n  }\n\n  /* updateRelProperties(event, relProperties = null) {\n // fetch the properties of selected type and display it in the dropdown\n  if (!relProperties || !relProperties.hasOwnProperty('properties')) {\n    relProperties = null;\n  } else {\n    relProperties = relProperties['properties'];\n  }\n  this.typeProperties =  this.getRelProperties([event], relProperties);\n    // trigger an api to get all the names of the nodes in the graph\n  this.graphSrvc.getNodeLabelData().subscribe(response => {\n    let temname = [];\n    if (response && response.length > 0) {\n      response.forEach(data => {\n        let keyName = Object.keys(data)[0];\n        if(keyName === \"Name\"){\n            temname = data['Name'];\n          }\n        });\n      this.fromNames = _.cloneDeep(temname);\n      this.toNames = _.cloneDeep(temname);\n      }\n    }, error => {\n      console.log(error);\n      this.fromNames = [];\n      this.toNames = [];\n    });\n  } */\n\n  /* getRelProperties(relType: Array<string>, relProperties = null): any {\n    if (relType.length > 0) {\n      let fetchedProperties = [];\n      if (!!relProperties) {\n        Object.keys(relProperties).forEach(property => {\n          if (property !== 'Type') {\n            fetchedProperties.push(property);\n          }\n        });\n      }\n      else {\n        this.relationsData.forEach(Obj => {\n          if (Obj.type === relType[0]) {\n            fetchedProperties = Obj['properties'];\n            return fetchedProperties;\n          }\n        });\n      }\n      return fetchedProperties.filter(el => {\n        return el !== 'deleted';\n      });\n    } else {\n      return [];\n    }\n  } */\n\n  /* submitRelModal(type = 'create') {\n    let nodeData = null;\n    let relationData = null;\n    let sourceNode = null;\n    let targetNode = null;\n\n    if (type === 'create') {\n      nodeData = {\n        Name: null\n      };\n      sourceNode = _.cloneDeep(nodeData);\n      targetNode = _.cloneDeep(nodeData);\n      sourceNode.Name = this.selectedNodeNameSource;\n      targetNode.Name = this.selectedNodeNameTarget;\n    }\n\n    relationData = {\n      type: null,\n      properties: {}\n    };\n\n    relationData.type = [this.selectedType];\n\n\n    // extract properties from modal if entered\n    $('#createRelationModal :text').each(function() {\n      let key = $(this).attr('id') || null;\n      let value = $(this).val() || null;\n      relationData.properties[key] = value;\n      });\n\n    try {\n      relationData = this.validateRelationData(relationData);\n      console.log('relationship created is ', relationData);\n      // add the source and target nodes of this relation\n      if (type === 'create') {\n        relationData['from'] = sourceNode.Name;\n        relationData['to'] = targetNode.Name;\n      }\n      const relationID = !isNaN($(`#edit_btn`).attr('relation_id')) ? $(`#edit_btn`).attr('relation_id') : null;\n      relationData['id'] = relationID;\n      this.edgeBtnEvent.emit({ type: 'click', action: `${type}`, data: relationData });\n      // hide the modal once the data is created properly\n      $('#createRelationModal').modal('hide');\n    }\n    catch (e) {\n      console.log(e);\n    }\n  } */\n\n  updateList(key, name) {\n    if (name.length > 0) {\n      let ans = '';\n      // if name is selected from source, remove it from target and vice versa\n      if (key == 'from') {\n        ans = _.remove(this.fromNames, (val) => {\n          return val === name[0];\n        });\n        if (ans) {\n          this.fromNames = _.cloneDeep(this.fromNames);\n        }\n      }\n      else if (key == 'to') {\n        ans = _.remove(this.toNames, (val) => {\n          return val === name[0];\n        });\n        if (ans) {\n          this.toNames = _.cloneDeep(this.toNames);\n        }\n      }\n      else {\n        // nothing\n      }\n    }\n  }\n\n  activateDelete(deleteModalID, triggeredBy) {\n    let id = null;\n    // first get the information of the modal which is trying to trigger the delete modal, then show the delete modal\n    this.deleteContext = triggeredBy;\n    // hide the respective node or relation modal before showing delete modal\n    if (triggeredBy === 'node') {\n      this.hideModal('createNodeModal');\n    }\n    if (triggeredBy === 'relation') {\n      this.hideModal('createRelationModal');\n    }\n    $(`#${deleteModalID}`).modal('show');\n    // get the id of the node/relation triggering delete\n    if (triggeredBy === 'node') {\n      id = this.clickedNodeID;\n    } else if (triggeredBy === 'relation') {\n      id = this.clickedRelationID;\n    }\n    // add the id of node/relation on the delete button for later reference\n    this.addAttribute('del_btn', `${triggeredBy}_id`, id);\n  }\n\n  submitDelete(deleteContext) {\n    console.log('delete ', deleteContext);\n    // get the id of node/relation  to delete\n    const selectedID = $(`#del_btn`).attr(`${deleteContext}_id`);\n    if (deleteContext === 'node') {\n      this.nodeBtnEvent.emit({ type: 'click', action: 'delete', data: { id: selectedID } });\n    } else if (deleteContext === 'relation') {\n      this.edgeBtnEvent.emit({ type: 'click', action: 'delete', data: { id: selectedID } });\n    } else {\n      // nothing\n    }\n    this.hideModal('deleteModal');\n  }\n\n  addNewProperty() {\n    console.log('add new property');\n    this.enableNewTemplate = _.cloneDeep(true);\n  }\n\n  deleteProperty(propertyName, modalType = 'node') {\n    if (!!propertyName) {\n      // find the property in the labelProperties array and if present, simply remove it\n      if (modalType === 'node') {\n        this.labelProperties.filter((property, index) => {\n          if (property === propertyName) {\n            console.log('found ', property + ' at ' + index);\n            this.updateSelectedPropertiesObject(property, 'delete');\n            return this.labelProperties.splice(index, 1);\n          }\n        });\n      } else if (modalType === 'relation') {\n        this.typeProperties.filter((property, index) => {\n          if (property === propertyName) {\n            console.log('found ', property + ' at ' + index);\n            this.updateSelectedPropertiesObject(property, 'delete');\n            return this.typeProperties.splice(index, 1);\n          }\n        });\n      }\n    }\n  }\n\n  saveNewProperty(modalType) {\n    const modalConfig = {\n      node: 0,\n      relation: 1\n    };\n    console.log('adding new property in ', modalType);\n    let newPropertyForm = (modalType === 'node') ? $(`#NewPropertyGroup :text`) : $(`#NewPropertyGroupRel :text`);\n    let propertyKey = null;\n    // let propertyValue = null;\n    if (newPropertyForm.length) {\n      propertyKey = $(`[id='${$(newPropertyForm[0]).attr('id')}']`).val();\n      // propertyValue  = $(`[id='${$(newPropertyForm[1]).attr('id')}']`).val();\n      if (!propertyKey) {\n        alert('Cannot add a property without a Name');\n      } else {\n        /* if (!propertyValue) {\n          propertyValue = \"null\";\n        } */\n        // console.log(propertyKey + '  ' + propertyValue);\n        if (modalType === 'node') {\n          this.labelProperties.push(propertyKey);\n          this.labelProperties = _.uniq(this.labelProperties);\n          this.addNewPropertyToAvailablePropterties(propertyKey, this.ADD_NEW_PROPERTY);\n          // this.appendNewElement({name: propertyKey});\n          this.enableNewTemplate = false;\n        } else if (modalType === 'relation') {\n          this.typeProperties.push(propertyKey);\n          this.typeProperties = _.uniq(this.typeProperties);\n          this.enableNewTemplate = _.cloneDeep(false);\n          this.addNewPropertyToAvailablePropterties(propertyKey, this.ADD_NEW_PROPERTY);\n        }\n        this.updateSelectedPropertiesObject(propertyKey, 'add');\n      }\n    }\n    // clear the property box\n    $('#propertyKey').val('');\n    $('#propertyKeyRel').val('');\n  }\n\n  addNewPropertyToAvailablePropterties(propertyName, defaultTextToAdd = '') {\n    // add the new property name in the availablePropertiesList if not exisits and add a default value of ADD_NEW_PROPERTY\n    if (Object.keys(this.availablePropertyList).indexOf(propertyName) <= -1) {\n      // it is a new property\n      this.availablePropertyList[propertyName] = { list: [], enableNewProperty: false };\n      if (defaultTextToAdd) {\n        this.availablePropertyList[propertyName]['list'] = [defaultTextToAdd];\n      }\n    }\n  }\n\n  removeNewPropertyFromAvailableProperties(propertyName) {\n    if (Object.keys(this.availablePropertyList).indexOf(propertyName) > -1) {\n      // property found, simlpy delete the property\n    }\n  }\n\n  updateSelectedPropertiesObject(key, action = 'add') {\n    // add / delete the provided key from selectedPropertiesObject\n    if (action === 'add') {\n      if (Object.keys(this.selectedPropertiesObject).indexOf(key) <= -1) {\n        this.selectedPropertiesObject[key] = \"\";\n        this.selectedPropertiesObject = _.cloneDeep(this.selectedPropertiesObject);\n      }\n    }\n    else if (action === 'delete') {\n      if (Object.keys(this.selectedPropertiesObject).indexOf(key) > -1) {\n        delete this.selectedPropertiesObject[key]\n        this.selectedPropertiesObject = _.cloneDeep(this.selectedPropertiesObject);\n      }\n    }\n  }\n\n  // getPropertyValues() {\n  //   // get the label information from the graph and then seperate different keys and their already filled options\n  //   this.graphSrvc.getNodeLabelData().pipe(map(data => {\n  //     if (!data.length) {\n  //       return of({});\n  //     }\n  //     // recieveing some data, filter out the name and labels key and send the rest\n  //     console.log('label data is ', data);\n  //     return of(data);\n  //   }));\n  // }\n\n  promptRelation() {\n    // call create relation procedure\n    this.hideModal('RelAfterNode');\n    this.showModal('createRelationModal');\n    this.createRelation();\n  }\n\n  addNewLabel(labelFor = null) {\n    let val = null;\n    if (labelFor === 'node') {\n      val = $(`#id_newLabelNode`).val();\n      if (!!val) {\n        // push it in the typeOptions\n        let newTypes = _.cloneDeep(this.typeOptions);\n        newTypes = _.cloneDeep(this.pushOnTop(val, newTypes, 1));\n        newTypes = _.uniq(newTypes);\n        this.typeOptions = _.cloneDeep(newTypes);\n      }\n    } else if (labelFor === 'relation') {\n      val = $(`#id_newLabelRelation`).val();\n      if (!!val) {\n        let newTypesRel = _.cloneDeep(this.relationTypeOptions);\n        newTypesRel = _.cloneDeep(this.pushOnTop(val, newTypesRel, 1));\n        newTypesRel = _.uniq(newTypesRel);\n        this.relationTypeOptions = _.cloneDeep(newTypesRel);\n      }\n    }\n    console.log(val);\n    this.selectedType = null;\n  }\n\n  updateSelectedOption(propertValueEvent, propertyKey) {\n    console.log(`property is  ${propertyKey} and value is ${this.selectedPropertiesObject[propertyKey]}`);\n    if (!!propertyKey && this.selectedPropertiesObject[propertyKey] === this.ADD_NEW_PROPERTY) {\n      console.log('selected NEW PROPERTY for ', propertyKey);\n      this.availablePropertyList[propertyKey]['enableNewProperty'] = true;\n    }\n  }\n\n  hasList(data) {\n    // check whether provided data is present in the availablePropertyList and return accordingly\n    if (!!data) {\n      if (Object.keys(this.availablePropertyList).indexOf(data) > -1) {\n        console.log('will display dropdown for ', data);\n        return true;\n      } else {\n        console.log('will display text box for ', data);\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  appendNewElement(elementDetails: object | null) {\n    const newPropertyEl = `<div class=\"modalItem\" id=\"newPropertiesContainer_${elementDetails['name']}\">\n    <p class=\"sectionName\">${elementDetails['name']}</p>\n    <span class=\"inputSpan\">\n        <div class=\"ui corner labeled input normalTextBox\">\n            <input type=\"text\" placeholder=\"Enter Value...\" id=\"id_${elementDetails['name']}\" \n            [(ngModel)] = \"selectedPropertiesObject['${elementDetails['name']}']\" \n            (ngModelChange)=\"updateSelectedOption($event, '${elementDetails['name']}')\">\n        </div>\n    </span>\n    <span class=\"supportIcons\" (click)=\"deleteProperty('${elementDetails['name']}')\"><i class=\"far fa-trash-alt\"></i></span>\n</div>`;\n\n    // add this element into provided div class\n    $(`.newPropertyGroup`).append(newPropertyEl);\n  }\n\n  updateNewPropertyValue(keyupEvent, data) {\n    if (keyupEvent.key === 'Enter') {\n      // push the new value entered into the propertyValues list\n      if (!!data) {\n        // tslint:disable-next-line: max-line-length\n        this.availablePropertyList[data]['list'] = this.pushOnTop(this.selectedPropertiesObject[data], this.availablePropertyList[data]['list'], 1);\n        this.availablePropertyList[data]['enableNewProperty'] = false;\n      }\n    }\n  }\n\n  // to set dropdown of from and to \n  optionLookUp = (query: string, initial: number) => {\n    // to change lookup option according to search \n    if (!!query && query.length > 0) {\n      let regex: RegExp | string;\n      try {\n        regex = new RegExp(query, \"i\");\n      } catch (e) {\n        regex = query;\n      }\n      return new Promise(resolve =>\n        setTimeout(() => resolve(this.totalName.filter(item => item.key.match(regex))), 500));\n    } else {\n      // to set initial dropdown\n      return Promise.resolve(this.totalName);\n    }\n  }\n\n\n  restoreData(restoreType) {\n    // fetch the id of element requested to restore\n    let clickedElementID = this.getAttribute('restoreBtn', `${restoreType}_id`);\n    clickedElementID = isNaN(clickedElementID) ? null : parseInt(clickedElementID, 10);\n    // now send the data to restore the element\n    if ((clickedElementID !== null && clickedElementID !== undefined) && this.allowedRestoreEvents.indexOf(restoreType) > -1) {\n      // emit data for node restore\n      this.restoreEvent.emit({type: restoreType, data : {id: clickedElementID}});\n    } else {\n      // tslint:disable-next-line: max-line-length\n      console.error('An error occured while restoring the data, either clickedElementID is not valid or the event type is not of node/relation');\n    }\n  }\n\n  getAttribute(elementID, attributeKey) {\n    return $(`#${elementID}`).attr(`${attributeKey}`);\n  }\n\n  ngDoCheck() {\n    // resetting the value so that it stays updated anytime needed, temporary bug fix for restoredOptions variable not setting properly\n    this.restoreOptions = _.cloneDeep(this.restoreOptions);\n  }\n\n  selectedColorForNewType(event) {\n    console.log('event from parent ', event);\n    this.newTypeColor = event;\n    if (Object.keys(this.totalNodesProperties).indexOf('color') > -1 && this.totalNodesProperties['color'].indexOf(event) > -1) {\n      // the color is already used\n      this.snackbar.warn({message: 'This color is already used, select another one !'});\n    } else {\n      console.log('This is the new color');\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid p-3\\\">\\n    <div class=\\\"headerWrapper\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-3 logo left-logo\\\">\\n                <img (click)=\\\"redirectToHome()\\\" src=\\\"assets/societal-logo.png\\\" />\\n            </div>\\n            <div class=\\\"col-9 rightToolbar\\\">\\n                <div class=\\\"dropdown\\\">\\n                    <div class=\\\"profilePic\\\">\\n                        <p>Hi Rishabh</p>\\n                        <img src=\\\"./../../../../../assets/round_profile.jpg\\\" />\\n                    </div>\\n                    <div class=\\\"dropdown-content\\\">\\n                        <a href=\\\"/profile\\\">PROFILE</a>\\n                        <a href=\\\"/settings\\\">SETTINGS</a>\\n                        <a href=\\\"/logout\\\">LOGOUT</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".headerWrapper {\\n  height: 10vh;\\n  background: #fff; }\\n\\n.container-fluid {\\n  background: #fff; }\\n\\n.rightToolbar {\\n  height: 100%;\\n  float: right;\\n  width: 30%; }\\n\\n.login-button {\\n  border-radius: 20px;\\n  font-size: 14px;\\n  line-height: 2;\\n  min-width: 90px;\\n  float: right;\\n  background: #5f5f5f;\\n  border: none;\\n  text-decoration: none; }\\n\\n.login-button:active:focus {\\n  background: #5f5f5e; }\\n\\n.login-button:hover {\\n  box-shadow: 2px 7px 18px 1px rgba(95, 95, 95, 0.76);\\n  transition: 0.7s; }\\n\\n.dropdown {\\n  position: relative;\\n  float: right;\\n  z-index: 10; }\\n\\n.dropdown:hover .dropdown-content {\\n  display: block;\\n  transition: 0.5s; }\\n\\n.dropdown-content:hover {\\n  display: block;\\n  transition: 1s; }\\n\\n.dropdown-content {\\n  display: none;\\n  position: absolute;\\n  background-color: white;\\n  padding: 0;\\n  min-height: 120px;\\n  min-width: 220px;\\n  right: 1px;\\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\\n  border-radius: 5px;\\n  z-index: 1; }\\n\\n.dropdown-content a {\\n    padding: 20px 10px;\\n    display: block;\\n    text-decoration: none;\\n    color: grey;\\n    font-weight: 400; }\\n\\n.dropdown-content a:hover {\\n    background-color: #5f5f5f;\\n    color: white;\\n    transition: 0.7s;\\n    border-radius: 5px; }\\n\\n.profilePic {\\n  margin-right: 30px;\\n  border-radius: 50%;\\n  display: -webkit-box;\\n  /* img:hover {\\n        width: 80px;\\n        height: 80px;\\n        transition: 0.5s;\\n    } */ }\\n\\n.profilePic img {\\n    cursor: pointer;\\n    width: 70px;\\n    height: 70px; }\\n\\n.profilePic p {\\n    margin-top: 30px;\\n    margin-right: 20px;\\n    cursor: pointer; }\\n\\n.profileDetails {\\n  position: absolute;\\n  background: whitesmoke;\\n  color: black;\\n  display: inline;\\n  min-width: 100px; }\\n\\n.left-logo img {\\n  cursor: pointer;\\n  max-height: 10vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkaXR5YS9wcm9qZWN0L25ldHdvcmtfdml6dWFsaXplcl9kMy9uZXR3b3JrLXZpc3VhbGl6ZXIvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2Rhc2hib2FyZC12Mi1oZWFkZXIvZGFzaGJvYXJkLWhlYWRlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2Rhc2hib2FyZC12Mi1oZWFkZXIvZGFzaGJvYXJkLWhlYWRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxZQUFZO0VBQ1osWUFBWTtFQUNaLFVBQVUsRUFBQTs7QUFHZDtFQUNJLG1CQUFtQjtFQUNuQixlQUFlO0VBQ2YsY0FBYztFQUNkLGVBQWU7RUFDZixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixxQkFBcUIsRUFBQTs7QUFHekI7RUFDSSxtQkFBbUIsRUFBQTs7QUFHdkI7RUFDSSxtREFBbUQ7RUFDbkQsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFZLEVBQUE7O0FBR2hCO0VBRVEsY0FBYztFQUNkLGdCQUFnQixFQUFBOztBQUl4QjtFQUNJLGNBQWM7RUFDZCxjQUFjLEVBQUE7O0FBR2xCO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFFaEIsVUFBVTtFQUNWLCtDQUErQztFQWMvQyxrQkFBa0I7RUFDbEIsVUFBVSxFQUFBOztBQXhCZDtJQVdRLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxnQkFBZ0IsRUFBQTs7QUFmeEI7SUFrQlEseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsa0JBQWtCLEVBQUE7O0FBTTFCO0VBQ0ksa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFNcEI7Ozs7T0NoQkcsRURvQkM7O0FBYlI7SUFLUSxlQUFlO0lBQ2YsV0FBVztJQUNYLFlBQVksRUFBQTs7QUFQcEI7SUFlUSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGVBQWUsRUFBQTs7QUFJdkI7RUFDSSxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBRVEsZUFBZTtFQUNmLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2Rhc2hib2FyZC12Mi1oZWFkZXIvZGFzaGJvYXJkLWhlYWRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXJXcmFwcGVyIHtcbiAgICBoZWlnaHQ6IDEwdmg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLmNvbnRhaW5lci1mbHVpZCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbn1cblxuLnJpZ2h0VG9vbGJhciB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICB3aWR0aDogMzAlO1xufVxuXG4ubG9naW4tYnV0dG9uIHtcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMjtcbiAgICBtaW4td2lkdGg6IDkwcHg7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGJhY2tncm91bmQ6ICM1ZjVmNWY7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLmxvZ2luLWJ1dHRvbjphY3RpdmU6Zm9jdXMge1xuICAgIGJhY2tncm91bmQ6ICM1ZjVmNWU7XG59XG5cbi5sb2dpbi1idXR0b246aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDJweCA3cHggMThweCAxcHggcmdiYSg5NSwgOTUsIDk1LCAwLjc2KTtcbiAgICB0cmFuc2l0aW9uOiAwLjdzO1xufVxuXG4uZHJvcGRvd24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgei1pbmRleCA6IDEwO1xufVxuXG4uZHJvcGRvd246aG92ZXIge1xuICAgIC5kcm9wZG93bi1jb250ZW50IHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRyYW5zaXRpb246IDAuNXM7XG4gICAgfVxufVxuXG4uZHJvcGRvd24tY29udGVudDpob3ZlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgdHJhbnNpdGlvbjogMXM7XG59XG5cbi5kcm9wZG93bi1jb250ZW50IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1pbi1oZWlnaHQ6IDEyMHB4O1xuICAgIG1pbi13aWR0aDogMjIwcHg7XG4gICAgLy8gdG9wOiA4NnB4O1xuICAgIHJpZ2h0OiAxcHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgYSB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHggMTBweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgY29sb3I6IGdyZXk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgfVxuICAgIGE6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWY1ZjVmO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIHRyYW5zaXRpb246IDAuN3M7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICB9XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIHotaW5kZXg6IDE7XG59XG5cbi5wcm9maWxlUGljIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGltZyB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICAgIGhlaWdodDogNzBweDtcbiAgICB9XG4gICAgLyogaW1nOmhvdmVyIHtcbiAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgIGhlaWdodDogODBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMC41cztcbiAgICB9ICovXG4gICAgcCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbn1cblxuLnByb2ZpbGVEZXRhaWxzIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIG1pbi13aWR0aDogMTAwcHg7XG59XG5cbi5sZWZ0LWxvZ28ge1xuICAgIGltZyB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgbWF4LWhlaWdodDogMTB2aDtcbiAgICB9XG59IiwiLmhlYWRlcldyYXBwZXIge1xuICBoZWlnaHQ6IDEwdmg7XG4gIGJhY2tncm91bmQ6ICNmZmY7IH1cblxuLmNvbnRhaW5lci1mbHVpZCB7XG4gIGJhY2tncm91bmQ6ICNmZmY7IH1cblxuLnJpZ2h0VG9vbGJhciB7XG4gIGhlaWdodDogMTAwJTtcbiAgZmxvYXQ6IHJpZ2h0O1xuICB3aWR0aDogMzAlOyB9XG5cbi5sb2dpbi1idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBtaW4td2lkdGg6IDkwcHg7XG4gIGZsb2F0OiByaWdodDtcbiAgYmFja2dyb3VuZDogIzVmNWY1ZjtcbiAgYm9yZGVyOiBub25lO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLmxvZ2luLWJ1dHRvbjphY3RpdmU6Zm9jdXMge1xuICBiYWNrZ3JvdW5kOiAjNWY1ZjVlOyB9XG5cbi5sb2dpbi1idXR0b246aG92ZXIge1xuICBib3gtc2hhZG93OiAycHggN3B4IDE4cHggMXB4IHJnYmEoOTUsIDk1LCA5NSwgMC43Nik7XG4gIHRyYW5zaXRpb246IDAuN3M7IH1cblxuLmRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbG9hdDogcmlnaHQ7XG4gIHotaW5kZXg6IDEwOyB9XG5cbi5kcm9wZG93bjpob3ZlciAuZHJvcGRvd24tY29udGVudCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0cmFuc2l0aW9uOiAwLjVzOyB9XG5cbi5kcm9wZG93bi1jb250ZW50OmhvdmVyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IDFzOyB9XG5cbi5kcm9wZG93bi1jb250ZW50IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMDtcbiAgbWluLWhlaWdodDogMTIwcHg7XG4gIG1pbi13aWR0aDogMjIwcHg7XG4gIHJpZ2h0OiAxcHg7XG4gIGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHotaW5kZXg6IDE7IH1cbiAgLmRyb3Bkb3duLWNvbnRlbnQgYSB7XG4gICAgcGFkZGluZzogMjBweCAxMHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogZ3JleTtcbiAgICBmb250LXdlaWdodDogNDAwOyB9XG4gIC5kcm9wZG93bi1jb250ZW50IGE6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1ZjVmNWY7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRyYW5zaXRpb246IDAuN3M7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyB9XG5cbi5wcm9maWxlUGljIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAvKiBpbWc6aG92ZXIge1xuICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgIH0gKi8gfVxuICAucHJvZmlsZVBpYyBpbWcge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB3aWR0aDogNzBweDtcbiAgICBoZWlnaHQ6IDcwcHg7IH1cbiAgLnByb2ZpbGVQaWMgcCB7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbi5wcm9maWxlRGV0YWlscyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbiAgY29sb3I6IGJsYWNrO1xuICBkaXNwbGF5OiBpbmxpbmU7XG4gIG1pbi13aWR0aDogMTAwcHg7IH1cblxuLmxlZnQtbG9nbyBpbWcge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG1heC1oZWlnaHQ6IDEwdmg7IH1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard-header',\n  templateUrl: './dashboard-header.component.html',\n  styleUrls: ['./dashboard-header.component.scss']\n})\nexport class DashboardHeaderComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  redirectToHome() {\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper sidebar-wrapper\\\">\\n    <div class=\\\"sidebarBody p-0\\\">\\n        <div class=\\\"sidebarBodyTitle\\\">\\n            <p>Filter By Attributes</p>\\n        </div>\\n        <div class=\\\"sidebarElements\\\" *ngIf=\\\"totalAtrributeOptions?.length > 0\\\">\\n            <div class=\\\"item-container\\\">\\n                <div class=\\\"item\\\" *ngFor=\\\"let attributeOptions of totalAtrributeOptions; let i = index\\\">\\n                    <div *ngIf=\\\"attributeOptions\\\">\\n                        <span class=\\\"\\\">\\n\\n                        </span>\\n                        <a class=\\\"item-text hoverable\\\" (click)=\\\"networkElementClick(attributeOptions['attribute']);attributeOptions['rotate'] = !attributeOptions['rotate']\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseExample{{i}}\\\" role=\\\"button\\\" [attr.aria-expanded]=\\\"attributeOptions['rotate']\\\"\\n                            [attr.aria-controls]=\\\"'collapseExample'+i\\\" [ngClass]=\\\"{'rotate': attributeOptions['rotate'], 'no-rotate': !attributeOptions['rotate']}\\\">{{attributeOptions['attribute']}}\\n                            <span class=\\\"ele-count count-org\\\">{{attributeOptions['options'].length}}</span>\\n                        </a>\\n                        <span class=\\\"fas fa-chevron-right\\\" data-toggle=\\\"collapse\\\" [attr.href]=\\\"'#collapseExample'+i\\\" role=\\\"button\\\" [attr.aria-expanded]=\\\"attributeOptions?.rotate\\\" [attr.aria-controls]=\\\"'collapseExample'+i\\\" (click)=\\\"attributeOptions['rotate'] = !attributeOptions['rotate']\\\"\\n                            [ngClass]=\\\"{'rotate': attributeOptions?.rotate, 'no-rotate': !attributeOptions?.rotate}\\\">\\n                        </span>\\n                        <div class=\\\"collapse\\\" [ngClass]=\\\"{'show-drop': attributeOptions?.rotate, 'hide-drop': !attributeOptions?.rotate}\\\">\\n                            <sui-multi-select [(ngModel)]=\\\"selectedAttributeOptions[attributeOptions['attribute']]\\\" [options]=\\\"attributeOptions['options']\\\" [maxSelected]=\\\"15\\\"  #totalAtrributeOptions>\\n                                <div class=\\\"ui icon search input\\\">\\n                                    <i class=\\\"search icon\\\"></i>\\n                                    <input suiSelectSearch type=\\\"text\\\" placeholder=\\\"Search {{attributeOptions['attribute']}}...\\\">\\n                                </div>\\n                                <div class=\\\"scrolling menu\\\">\\n                                    <sui-select-option *ngFor=\\\"let o of totalAtrributeOptions.filteredOptions\\\" [value]=\\\"o\\\"></sui-select-option>\\n                                </div>\\n                            </sui-multi-select>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"btn-container d-flex justify-content-around\\\">\\n            <div class=\\\"searchBtnWrapper btn-sidebar\\\">\\n                <button class=\\\"btn btn-default btn-md searchBtn\\\" (click)=\\\"resetGraph()\\\">Reset</button>\\n            </div>\\n            <div class=\\\"searchBtnWrapper btn-sidebar\\\">\\n                <button class=\\\"btn btn-default btn-md searchBtn\\\" (click)=\\\"hitSearchGraph()\\\">Apply</button>\\n            </div>\\n\\n        </div> -->\\n        <div class=\\\"sidebarBodyTitle\\\">\\n            <p>Filter By Relationships</p>\\n        </div>\\n        <div class=\\\"sidebarElements\\\">\\n            <div class=\\\"item\\\">\\n                <sui-multi-select [(ngModel)]=\\\"selectedRelation\\\" [options]=\\\"relationOptions\\\" [maxSelected]=\\\"5\\\" #relation>\\n                    <div class=\\\"ui icon search input\\\">\\n                        <i class=\\\"search icon\\\"></i>\\n                        <input suiSelectSearch type=\\\"text\\\" placeholder=\\\"Search Relationships...\\\">\\n                    </div>\\n                    <div class=\\\"scrolling menu\\\">\\n                        <sui-select-option *ngFor=\\\"let o of relation.filteredOptions\\\" [value]=\\\"o\\\"></sui-select-option>\\n                    </div>\\n                </sui-multi-select>\\n                <!-- <div class=\\\"rel-tabs-container\\\" *ngFor=\\\"let r of relationOptions\\\">\\n                    <div class=\\\"rel-tab\\\" (click)=\\\"relationclickEvent(r)\\\" id={{r}}>\\n                        <p>{{r}}</p>\\n                    </div>\\n                </div> -->\\n                <div class=\\\"btn-container d-flex justify-content-around margin-top-75\\\">\\n                    <div class=\\\"searchBtnWrapper btn-sidebar\\\">\\n                        <button class=\\\"btn btn-default btn-md searchBtn\\\" (click)=\\\"resetGraph()\\\">Reset</button>\\n                    </div>\\n                    <div class=\\\"searchBtnWrapper btn-sidebar\\\">\\n                        <button class=\\\"btn btn-default btn-md searchBtn\\\" (click)=\\\"hitSearchGraph()\\\">Apply</button>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"btn-container d-flex justify-content-around\\\">\\n                    <span>Show deleted data</span>\\n                    <app-toggle-switch (toggleEvent)=\\\"NodeLimitToggleHandler($event)\\\"></app-toggle-switch>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"searchBtnWrapper btn-sidebar\\\">\\n            <button class=\\\"btn btn-default btn-md searchBtn\\\" (click)=\\\"noderelationSearchGraph()\\\">Apply Both</button>\\n        </div> -->\\n    </div>\\n\\n</div>\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Kanit&display=swap\\\");\\n::-webkit-scrollbar-track {\\n  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\\n  background-color: #F5F5F5; }\\n::-webkit-scrollbar {\\n  width: 6px;\\n  background-color: #F5F5F5; }\\n::-webkit-scrollbar-thumb {\\n  background-color: #5f5f5f; }\\n.margin-top-75 {\\n  margin-top: 75px; }\\n.sidebar-wrapper {\\n  position: absolute;\\n  left: 0;\\n  overflow-y: auto;\\n  z-index: 1;\\n  width: 20%;\\n  height: 92vh;\\n  background: #fff; }\\n.logo {\\n  text-align: center; }\\n.logo img {\\n  cursor: pointer; }\\n.sidebarBodyTitle {\\n  font-family: 'Kanit', sans-serif;\\n  font-size: 18px;\\n  text-align: center; }\\n.sidebarBodyTitle p {\\n    padding: 0 10px;\\n    padding-top: 8px;\\n    padding-bottom: 8px;\\n    background: transparent;\\n    color: #5f5f5f;\\n    font-weight: bold;\\n    border-radius: 5px;\\n    transition: 1s;\\n    text-align: left; }\\n.sidebarElements {\\n  width: 100%;\\n  padding: 25px 0; }\\n.item {\\n  font-size: 16px;\\n  width: 100%;\\n  padding: 0; }\\n.item span {\\n    margin-right: 20px; }\\n.hoverable:hover {\\n  font-size: 18px;\\n  transition: 0.5s; }\\n.item-container {\\n  height: 40vh;\\n  overflow-y: auto; }\\n.item-container::-webkit-scrollbar {\\n  display: none; }\\n.item,\\n.item span {\\n  min-height: 50px;\\n  line-height: 2.7; }\\n.item-text {\\n  cursor: pointer;\\n  text-decoration: none;\\n  color: #000; }\\n.fa-chevron-right {\\n  float: right;\\n  cursor: pointer; }\\n.rotate {\\n  transform: rotate(90deg); }\\n.no-rotate {\\n  transform: rotate(0deg); }\\n.click-pink {\\n  color: pink; }\\n.hide {\\n  display: none; }\\n.show {\\n  display: block; }\\n.show-drop {\\n  transition: all linear 0.5s;\\n  display: block; }\\n.hide-drop {\\n  display: none; }\\n.ui.teal.left.pointing.label {\\n  background: #5f5f5f !important; }\\n.searchBtnWrapper {\\n  font-family: 'Kanit', sans-serif;\\n  font-size: 18px;\\n  text-align: center;\\n  position: relative;\\n  margin-bottom: 20px;\\n  bottom: 0;\\n  width: 100%; }\\n.searchBtnWrapper button {\\n    background: #e4e4e4;\\n    color: #000;\\n    min-width: 100px;\\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2); }\\n.searchBtnWrapper button:active {\\n    box-shadow: none;\\n    transition: 0.5s; }\\n.btn-sidebar {\\n  display: inline; }\\n.btn-container {\\n  margin-bottom: 25px; }\\n.rel-tabs-container {\\n  display: inline-block; }\\n.rel-tab p {\\n  word-break: break-all;\\n  cursor: pointer;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  font-weight: bold;\\n  font-size: 15px;\\n  background-color: #F5F5F5;\\n  color: #30333a;\\n  margin: 4px;\\n  padding: 3px 7px;\\n  border-radius: 3px; }\\n.ele-count {\\n  border-radius: 50%;\\n  padding: 8px;\\n  margin-left: 10px;\\n  text-align: center;\\n  display: inline; }\\n.wrapper hr {\\n  margin-bottom: 2em;\\n  margin-top: 0.15em; }\\n.rel-tabs-container .selected {\\n  box-shadow: -4px 4px 17px -8px rgba(0, 0, 0, 0.75); }\\n.count-org {\\n  background-color: #F5F5F5; }\\n.count-person {\\n  background-color: #F5F5F5; }\\n.count-department {\\n  background-color: #F5F5F5; }\\nspan.ele-count.count-org {\\n  padding: 9px 11px 9px 11px; }\\n.c_ff4444 {\\n  background-color: '#ff4444'; }\\n.c_ffbb33 {\\n  background-color: '#ffbb33'; }\\n.c_00C851 {\\n  background-color: '#00C851'; }\\n.c_33b5e5 {\\n  background-color: '#33b5e5'; }\\n.c_CC0000 {\\n  background-color: '#CC0000'; }\\n.c_FF8800 {\\n  background-color: '#FF8800'; }\\n.c_007E33 {\\n  background-color: '#007E33'; }\\n.c_0099CC {\\n  background-color: '#0099CC'; }\\n.c_9933CC {\\n  background-color: '#9933CC'; }\\n.c_0d47a1 {\\n  background-color: '#0d47a1'; }\\n.c_2BBBAD {\\n  background-color: '#2BBBAD'; }\\n.c_c51162 {\\n  background-color: '#c51162'; }\\n.spanWrapper {\\n  font-family: 'Kanit', sans-serif;\\n  font-weight: bold;\\n  max-width: 135px; }\\n@media screen and (max-width: 1100px) {\\n  .sidebar-wrapper {\\n    width: 25%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkaXR5YS9wcm9qZWN0L25ldHdvcmtfdml6dWFsaXplcl9kMy9uZXR3b3JrLXZpc3VhbGl6ZXIvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2Rhc2hib2FyZC12Mi1zaWRlYmFyL2Rhc2hib2FyZC1zaWRlYmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlFQUFZO0FBQ1o7RUFFSSw0Q0FBNEM7RUFDNUMseUJBQXlCLEVBQUE7QUFHN0I7RUFDSSxVQUFVO0VBQ1YseUJBQXlCLEVBQUE7QUFHN0I7RUFDSSx5QkFBeUIsRUFBQTtBQUc3QjtFQUNJLGdCQUFnQixFQUFBO0FBR3BCO0VBQ0ksa0JBQWtCO0VBQ2xCLE9BQU87RUFHUCxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFVBQVU7RUFDVixZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7QUFHcEI7RUFDSSxrQkFBa0IsRUFBQTtBQUl0QjtFQUdRLGVBQWUsRUFBQTtBQUl2QjtFQUNJLGdDQUFnQztFQUNoQyxlQUFlO0VBQ2Ysa0JBQWtCLEVBQUE7QUFIdEI7SUFNUSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsY0FBYztJQUNkLGlCQUFpQjtJQUVqQixrQkFBa0I7SUFDbEIsY0FBYztJQUNkLGdCQUFnQixFQUFBO0FBSXhCO0VBQ0ksV0FBVztFQUNYLGVBQWUsRUFBQTtBQUduQjtFQUNJLGVBQWU7RUFDZixXQUFXO0VBQ1gsVUFBVSxFQUFBO0FBSGQ7SUFPUSxrQkFBa0IsRUFBQTtBQUkxQjtFQUNJLGVBQWU7RUFDZixnQkFBZ0IsRUFBQTtBQUdwQjtFQUNJLFlBQVk7RUFDWixnQkFBZ0IsRUFBQTtBQUdwQjtFQUNJLGFBQWEsRUFBQTtBQUdqQjs7RUFFSSxnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7QUFHcEI7RUFDSSxlQUFlO0VBQ2YscUJBQXFCO0VBQ3JCLFdBQVcsRUFBQTtBQUdmO0VBQ0ksWUFBWTtFQUNaLGVBQWUsRUFBQTtBQUduQjtFQUNJLHdCQUF3QixFQUFBO0FBSTVCO0VBQ0ksdUJBQXVCLEVBQUE7QUFJM0I7RUFDSSxXQUFXLEVBQUE7QUFHZjtFQUNJLGFBQWEsRUFBQTtBQUdqQjtFQUNJLGNBQWMsRUFBQTtBQUdsQjtFQUVJLDJCQUEyQjtFQUMzQixjQUFjLEVBQUE7QUFHbEI7RUFDSSxhQUFhLEVBQUE7QUFHakI7RUFDSSw4QkFBOEIsRUFBQTtBQUdsQztFQUNJLGdDQUFnQztFQUNoQyxlQUFlO0VBQ2Ysa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsU0FBUztFQUNULFdBQVcsRUFBQTtBQVBmO0lBVVEsbUJBQW1CO0lBQ25CLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsK0NBQStDLEVBQUE7QUFidkQ7SUFnQlEsZ0JBQWdCO0lBQ2hCLGdCQUFnQixFQUFBO0FBSXhCO0VBQ0ksZUFBZSxFQUFBO0FBR25CO0VBQ0ksbUJBQW1CLEVBQUE7QUFHdkI7RUFDSSxxQkFBcUIsRUFBQTtBQUd6QjtFQUNJLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsMkRBQTJEO0VBQzNELGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGNBQXNCO0VBQ3RCLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQUE7QUFHdEI7RUFFSSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZUFBZSxFQUFBO0FBR25CO0VBQ0ksa0JBQWtCO0VBQ2xCLGtCQUFrQixFQUFBO0FBR3RCO0VBR0ksa0RBQWtELEVBQUE7QUFHdEQ7RUFDSSx5QkFBeUIsRUFBQTtBQUc3QjtFQUNJLHlCQUF5QixFQUFBO0FBRzdCO0VBQ0kseUJBQXlCLEVBQUE7QUFHN0I7RUFDSSwwQkFBMEIsRUFBQTtBQUc5QjtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLDJCQUNKLEVBQUE7QUFFQTtFQUNJLGdDQUFnQztFQUNoQyxpQkFBaUI7RUFDakIsZ0JBQWdCLEVBQUE7QUFJcEI7RUFDSTtJQUNJLFVBQVUsRUFBQSxFQUNiIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2Rhc2hib2FyZC12Mi1zaWRlYmFyL2Rhc2hib2FyZC1zaWRlYmFyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1LYW5pdCZkaXNwbGF5PXN3YXAnKTtcbjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDZweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTtcbn1cblxuOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgd2lkdGg6IDZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xufVxuXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWY1ZjVmO1xufVxuXG4ubWFyZ2luLXRvcC03NSB7XG4gICAgbWFyZ2luLXRvcDogNzVweDtcbn1cblxuLnNpZGViYXItd3JhcHBlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgLy8gd2lkdGg6IDIzJTtcbiAgICAvLyBoZWlnaHQ6IDEwMHZoO1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgei1pbmRleDogMTtcbiAgICB3aWR0aDogMjAlO1xuICAgIGhlaWdodDogOTJ2aDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4ubG9nbyB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG4ubG9nbyB7XG4gICAgaW1nIHtcbiAgICAgICAgLy8gd2lkdGg6IDcwJTtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbn1cblxuLnNpZGViYXJCb2R5VGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OiAnS2FuaXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcCB7XG4gICAgICAgIC8vIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgcGFkZGluZzogMCAxMHB4O1xuICAgICAgICBwYWRkaW5nLXRvcDogOHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogOHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgY29sb3I6ICM1ZjVmNWY7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAvLyBib3gtc2hhZG93OiAycHggN3B4IDE4cHggMXB4IHJnYmEoOTUsIDk1LCA5NSwgMC43Nik7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMXM7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxufVxuXG4uc2lkZWJhckVsZW1lbnRzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAyNXB4IDA7XG59XG5cbi5pdGVtIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMDtcbiAgICAvLyBoZWlnaHQ6IDIwJTtcbiAgICAvLyBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gICAgc3BhbiB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICB9XG59XG5cbi5ob3ZlcmFibGU6aG92ZXIge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xufVxuXG4uaXRlbS1jb250YWluZXIge1xuICAgIGhlaWdodDogNDB2aDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uaXRlbS1jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4uaXRlbSxcbi5pdGVtIHNwYW4ge1xuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDIuNztcbn1cblxuLml0ZW0tdGV4dCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuLmZhLWNoZXZyb24tcmlnaHQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5yb3RhdGUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDkwZGVnKTtcbiAgICAvLyB0cmFuc2l0aW9uOiAuOHM7XG59XG5cbi5uby1yb3RhdGUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICAgIC8vIHRyYW5zaXRpb246IC44cztcbn1cblxuLmNsaWNrLXBpbmsge1xuICAgIGNvbG9yOiBwaW5rO1xufVxuXG4uaGlkZSB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cblxuLnNob3cge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uc2hvdy1kcm9wIHtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCBsaW5lYXIgMC41cztcbiAgICB0cmFuc2l0aW9uOiBhbGwgbGluZWFyIDAuNXM7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5oaWRlLWRyb3Age1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbi51aS50ZWFsLmxlZnQucG9pbnRpbmcubGFiZWwge1xuICAgIGJhY2tncm91bmQ6ICM1ZjVmNWYgIWltcG9ydGFudDtcbn1cblxuLnNlYXJjaEJ0bldyYXBwZXIge1xuICAgIGZvbnQtZmFtaWx5OiAnS2FuaXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIC8vIG1hcmdpbi1yaWdodDogMjBweDtcbiAgICBidXR0b24ge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZTRlNGU0O1xuICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgfVxuICAgIGJ1dHRvbjphY3RpdmUge1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgIH1cbn1cblxuLmJ0bi1zaWRlYmFyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cbi5idG4tY29udGFpbmVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xufVxuXG4ucmVsLXRhYnMtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5yZWwtdGFiIHAge1xuICAgIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTtcbiAgICBjb2xvcjogcmdiKDQ4LCA1MSwgNTgpO1xuICAgIG1hcmdpbjogNHB4O1xuICAgIHBhZGRpbmc6IDNweCA3cHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xufVxuXG4uZWxlLWNvdW50IHtcbiAgICAvLyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGlubGluZTtcbn1cblxuLndyYXBwZXIgaHIge1xuICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICBtYXJnaW4tdG9wOiAwLjE1ZW07XG59XG5cbi5yZWwtdGFicy1jb250YWluZXIgLnNlbGVjdGVkIHtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IC00cHggNHB4IDE3cHggLThweCByZ2JhKDAsIDAsIDAsIDAuNzUpO1xuICAgIC1tb3otYm94LXNoYWRvdzogLTRweCA0cHggMTdweCAtOHB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gICAgYm94LXNoYWRvdzogLTRweCA0cHggMTdweCAtOHB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG59XG5cbi5jb3VudC1vcmcge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XG59XG5cbi5jb3VudC1wZXJzb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUY1RjU7XG59XG5cbi5jb3VudC1kZXBhcnRtZW50IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xufVxuXG5zcGFuLmVsZS1jb3VudC5jb3VudC1vcmcge1xuICAgIHBhZGRpbmc6IDlweCAxMXB4IDlweCAxMXB4O1xufVxuXG4uY19mZjQ0NDQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjZmY0NDQ0J1xufVxuXG4uY19mZmJiMzMge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjZmZiYjMzJ1xufVxuXG4uY18wMEM4NTEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMDBDODUxJ1xufVxuXG4uY18zM2I1ZTUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMzNiNWU1J1xufVxuXG4uY19DQzAwMDAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjQ0MwMDAwJ1xufVxuXG4uY19GRjg4MDAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjRkY4ODAwJ1xufVxuXG4uY18wMDdFMzMge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMDA3RTMzJ1xufVxuXG4uY18wMDk5Q0Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMDA5OUNDJ1xufVxuXG4uY185OTMzQ0Mge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjOTkzM0NDJ1xufVxuXG4uY18wZDQ3YTEge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMGQ0N2ExJ1xufVxuXG4uY18yQkJCQUQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjMkJCQkFEJ1xufVxuXG4uY19jNTExNjIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICcjYzUxMTYyJ1xufVxuXG4uc3BhbldyYXBwZXIge1xuICAgIGZvbnQtZmFtaWx5OiAnS2FuaXQnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1heC13aWR0aDogMTM1cHg7XG59XG5cbi8vIGFuIGF0dGVtcHQgdG8gbWFrZSBpdCBhIGJpdCByZXNwb25zaXZlXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAnMTEwMHB4Jykge1xuICAgIC5zaWRlYmFyLXdyYXBwZXIge1xuICAgICAgICB3aWR0aDogMjUlO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter, Input, OnChanges } from '@angular/core';\nimport { GraphDataService } from 'src/app/modules/core/services/graph-data-service/graph-data.service';\nimport { SharedGraphService } from 'src/app/modules/core/services/shared-graph.service';\nimport { forkJoin, Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as _ from 'lodash';\nimport { SearchService } from 'src/app/modules/shared/services/search-service/search.service';\nimport { ToolbarSharedService } from 'src/app/modules/algo-runner/services/toolbar-shared-service/toolbar-shared.service';\n\n@Component({\n  selector: 'app-dashboard-sidebar',\n  templateUrl: './dashboard-sidebar.component.html',\n  styleUrls: ['./dashboard-sidebar.component.scss']\n})\n\nexport class DashboardSidebarComponent implements OnInit, OnChanges {\n\n  @Input() newNodeCreated: string;\n  // tslint:disable-next-line: no-input-rename\n  @Input('nodeLimitEnterEvent') nodeLimitOnEnter: any = null;\n  private showDisabled = false;\n  defaultColor = {\n    Trainer: 'c_ff4444',\n    Skill: 'c_ffbb33',\n    Government: 'c_00C851',\n    'Impact Investor': 'c_33b5e5',\n    'International Agency': 'c_CC0000',\n    Media: 'c_FF8800',\n    'NGO/CBO': 'c_007E33',\n    People: 'c_0099CC',\n    Philanthropy: 'c_9933CC',\n    Platform: 'c_0d47a1',\n    'Private Sector': 'c_2BBBAD',\n    'Research Institute': 'c_c51162'\n  };\n  @Output() eventClicked = new EventEmitter<object>();\n  @Output() nodeTypesEvent = new EventEmitter<Array<any>>();\n  public relationOptions: Array<string> = [];\n  public selectedRelationship: { type: string }[] = [];\n  public selectedRelation: Array<string> = [];\n  public selectedAttributeOptions: Array<object> = [];;\n  public selectedGraph: { type: string, value: Array<string> }[] = [];\n  public graphData = {};\n  public relstatus = false;\n  public preSelectedRel: string;\n\n  public edgesNewObject: { type: string, nodeid: Array<number> }[] = [];\n  public nodesNewObject: { type: string, nodeid: Array<number> }[] = [];\n  public graphInitData: Array<object> = [];\n\n  public totalNodesProperties = {};\n  public totalRelationsProperties = {};\n  public processedData;\n  public nodeTypes2: Array<any> = [];\n\n  public relationTypeOptions: Array<any> = [];\n  public relationsData: any;\n  public totalAtrributeOptions: Array<object> = [];\n  // Query to fetch all labels\n  public queryObj = {\n    raw: true,\n    query: `MATCH (p) WHERE p:Batch OR p:Student WITH DISTINCT keys(p) AS keys,p\n     with DISTINCT labels(p) as label,keys \n     UNWIND keys AS keyslisting WITH DISTINCT keyslisting AS allfields,label\n     RETURN collect(allfields),label`\n  };\n\n  public properties : Observable<boolean>;\n  public types : Observable<boolean>;\n\n  private nodeRelationsDetailsObject: {nodes: object, relations: object} = {nodes: {}, relations: {}};\n  constructor(\n    private graphDataService: GraphDataService, private sharedGraphData: SharedGraphService,\n    private searchService: SearchService, private toolbarShrdSrvc: ToolbarSharedService) { }\n\n  ngOnInit() {\n    this.getGraph();\n  }\n\n  ngOnChanges() {\n    // update all dropdown when new node is created\n    // get the createdEvent\n    if (this.newNodeCreated) {\n      const nodeData = this.newNodeCreated['event'].split('_');\n      const nodeEvent = this.newNodeCreated['event'].split('_')[0];\n\n      if (nodeEvent === 'NodeEvent') {\n        if(nodeData[1] === 'restore') {\n          this.updateSidebar(nodeData[2]);\n        } else {\n          this.getGraph();\n          this.newNodeCreated = '';\n        }\n      }\n    }\n    // detect if the user hit enter while entering the nodelimit value\n    if (!!this.nodeLimitOnEnter && !isNaN(this.nodeLimitOnEnter)) {\n      // user pressed entered after filling a valid number\n      console.log('enter detected after ', this.nodeLimitOnEnter);\n      this.searchGraph();\n    }\n  }\n\n  /**\n   * Updates node relation details object\n   * @description This function updates the global nodeRelationDetails object and send it to algo runner for further use\n   * @param detailsObj\n   */\n  // tslint:disable-next-line: max-line-length\n  updateNodeRelationDetailsObject(detailsObj: {nodeTypes?: object, relationTypes?: any, nodeProperties?: object, relationProperties?: object}) {\n    if (detailsObj.hasOwnProperty('nodeTypes')) {\n      this.nodeRelationsDetailsObject.nodes['types'] = detailsObj.nodeTypes;\n    }\n    if (detailsObj.hasOwnProperty('relationTypes')) {\n      this.nodeRelationsDetailsObject.relations['types'] = detailsObj.relationTypes;\n    }\n    if (detailsObj.hasOwnProperty('nodeProperties')) {\n      this.nodeRelationsDetailsObject.nodes['properties'] = detailsObj.nodeProperties;\n    }\n    if (detailsObj.hasOwnProperty('relationProperties')) {\n      this.nodeRelationsDetailsObject.relations['properties'] = detailsObj.relationProperties;\n    }\n    // send it to algo runner\n    this.toolbarShrdSrvc.sendNodeRelationDetails(this.nodeRelationsDetailsObject);\n    this.toolbarShrdSrvc.sendNodeRelationDetailsStatic(this.nodeRelationsDetailsObject);\n  }\n\n  // set all data in sidebar dropdown\n  getGraph() {\n    this.totalAtrributeOptions = [];\n    // fetch the properties of all the nodes and relationships\n    forkJoin([this.graphDataService.getGraphProperties(), this.getNodeTypes()]).subscribe(results =>{\n      this.updateNodeRelationDetailsObject({\n        nodeTypes: results[1],\n        nodeProperties: results[0]['nodes'],\n        relationProperties: results[0]['relations']}\n        );\n      // results[0] is our character\n      // results[1] is our character homeworld\n      if(results[0].hasOwnProperty('nodes')){\n        // push name to top\n        this.setNodeProperties(results[0]);\n        // let index = this.totalAtrributeOptions.findIndex(obj => obj['attribute'] === \"name\")\n        // this.totalAtrributeOptions = _.cloneDeep(this.swap(this.totalAtrributeOptions, index, 0));\n      }\n      if(results[1].length > 0){\n        // push type to second position\n        this.setTypes(results[1]);\n        // let index = this.totalAtrributeOptions.findIndex((obj) =>  {\n        //   if(!!obj) {\n        //     return obj['attribute'] === \"Type\"\n        //   }\n        //   return false;\n        // });\n        // this.totalAtrributeOptions = _.cloneDeep(this.swap(this.totalAtrributeOptions, index, 1));\n      }\n    }, err => {\n      throwError({error : 'Error while reading graph properties'});\n      console.error(err);\n    });\n    this.getRelationTypes().subscribe(response => {\n      // this.graphInitData.push(data);\n      this.relationOptions = this.relationTypeOptions;\n      this.updateNodeRelationDetailsObject({relationTypes: this.relationTypeOptions});\n    });\n  }\n\n  onlyUnique(value, index, self) {\n    return self.indexOf(value) === index;\n  }\n\n  /**\n   * Search graph\n   * @description The function gets called whenever the apply filter on attributes is needed\n   */\n  searchGraph() {\n    let requestBody;\n    this.selectedGraph = [];\n    if (this.selectedAttributeOptions) {\n      Object.keys(this.selectedAttributeOptions).forEach(selectedKey => {\n        if (this.selectedAttributeOptions[selectedKey].length > 0) {\n          this.selectedGraph.push({ type: selectedKey, value: this.selectedAttributeOptions[selectedKey] });\n        }\n      });\n      if (this.selectedGraph.length > 0) {\n        requestBody = { nodes: this.selectedGraph };\n      } else {\n        // if no selected element\n        requestBody = {};\n      }\n    }\n    return requestBody;\n  }\n\n  // Method gives new edgesArray with related node ids\n  getRelatedNodeIdArrayFromEdges(selectedNodeId) {\n    if (this.graphInitData.length > 0) {\n      // console.log('rel',this.relationOptions);\n      let temArray = [];\n      this.graphInitData[0]['seperateEdges'].filter(edge => {\n        if (selectedNodeId === edge.from) {\n          temArray.push(edge.to);\n        } else if (selectedNodeId === edge.to) {\n          temArray.push(edge.from);\n        }\n      });\n      temArray = temArray.filter(this.onlyUnique);\n      return temArray;\n    }\n  }\n  // Method gives selected node id\n  getSelectedNodeId(nodeName) {\n    let temId;\n    if (this.graphInitData.length > 0) {\n      this.graphInitData[0]['seperateNodes'].filter(node => {\n        if (nodeName === node.label) {\n          temId = node.id;\n        }\n      });\n      return temId;\n    }\n  }\n\n  resetGraph() {\n    this.getGraph();\n    this.selectedAttributeOptions = [];\n    this.selectedRelation = [];\n    if (this.preSelectedRel) {\n      let element = document.getElementById(this.preSelectedRel);\n      element.classList.remove('selected');\n    }\n    const obj = { event: 'reset' };\n    this.eventClicked.emit(obj);\n  }\n\n\n  relationclickEvent(selectedRelation) {\n    let element;\n    if ( this.preSelectedRel) {\n      element = document.getElementById(this.preSelectedRel);\n      element.classList.remove('selected');\n    }\n\n    element = document.getElementById(selectedRelation);\n    element.classList.add('selected');\n\n    this.selectedRelationship = [];\n    this.relstatus = !this.relstatus;\n    this.selectedRelationship.push({ type: selectedRelation });\n    let requestBody = { nodes: [], edges: this.selectedRelationship };\n    console.log(\"re\", requestBody);\n    this.sharedGraphData.setGraphData(requestBody);\n    const obj = { event: 'search' };\n    this.eventClicked.emit(obj);\n    this.preSelectedRel = selectedRelation;\n  }\n\n  // return all nodes with selected relation\n  relationSearchGraph() {\n    let requestBody;\n    if (this.selectedRelation.length > 0) {\n      this.selectedRelationship = [];\n      this.selectedRelation.map(rel => {\n        this.selectedRelationship.push({ type: rel });\n      });\n      requestBody = { nodes: [], edges: this.selectedRelationship };\n    } else {\n      // if no selected element\n      requestBody = {};\n    }\n    return requestBody;\n  }\n\n  networkElementClick(element) { }\n\n\n  //\n  NodeLimitToggleHandler(event) {\n    try {\n      if (event.constructor === Object) {\n        this.showDisabled = event['isOn'];\n      }\n    } catch (e) {\n      this.showDisabled = false;\n    }\n    this.sharedGraphData.sendToogleStatus(this.showDisabled);\n  }\n\n\n  extractLabels(data) {\n    this.nodeTypes2 = [];\n    data.forEach(label => {\n      this.nodeTypes2.push(label.type[0]);\n    });\n    // console.log('types are ', this.nodeTypes2);\n  }\n\n\n  getNodeTypes() {\n    return this.searchService.runQuery(this.queryObj).pipe(map(data => {\n      console.log('recieved label data from service ', data);\n      this.processedData = this.processData(data);\n      // extract types from the array\n      this.extractLabels(this.processedData);\n      // this.typeOptions = _.cloneDeep(this.nodeTypes2);\n      return this.nodeTypes2;\n    }));\n  }\n  processData(data) {\n    if (data.length > 0) {\n      let tempData = [];\n      data.forEach(label => {\n        tempData.push({ type: label._fields[1], properties: label._fields[0] });\n      });\n      return tempData;\n    } else {\n      return [];\n    }\n  }\n\n  getRelationTypes() {\n    return this.graphDataService.getGraphRelations().pipe(map(response => {\n\n      this.relationsData = this.filterRelationsData(response);\n      let extractedTypes = this.extractTypes(this.relationsData);\n      // pass it into the options for dropdown\n      this.relationTypeOptions = _.cloneDeep(extractedTypes);\n      this.sharedGraphData.setRelationTypeOptions(this.relationTypeOptions);\n      this.sharedGraphData.setRelationsData(this.relationsData);\n      return true;\n    }, err => {\n      console.error('An error occured while fetching relations ', err);\n      throw Error();\n    }));\n  }\n\n  filterRelationsData(response) {\n    let filteredObjectArray = [];\n    filteredObjectArray.push(response[0]);\n    response.splice(0, 1);\n    // clear relations response as there are duplicates inside\n    // steps to clear, process each relation type\n    // find all the keys which are of this type and collect its properties into a unique array of objects\n    let i = 0;\n    while (i <= response.length) {\n      if (response.length === 0) {\n        i = 1;\n      } else {\n        let matched = false;\n        filteredObjectArray.forEach(firstObj => {\n          if (firstObj.type === response[i].type) {\n            matched = true;\n            firstObj['properties'].push(...response[i].properties);\n          }\n        });\n        if (matched) {\n          response.splice(i, 1);\n          i = 0;\n        } else {\n          filteredObjectArray.push(response[i]);\n          response.splice(i, 1);\n        }\n      }\n    }\n    // make the properties of each type as unique\n    filteredObjectArray.map(typeObj => {\n      typeObj['properties'] = _.uniq(typeObj['properties']);\n      return typeObj;\n    });\n    console.log('final fetched types for relation is ', filteredObjectArray);\n    return filteredObjectArray;\n  }\n\n  extractTypes(ObjectArray: any): any {\n    let typesArray = [];\n    ObjectArray.forEach(obj => {\n      typesArray.push(obj['type']);\n    });\n    return typesArray;\n  }\n\n  swap(ArrayForSwapping, swapFromIndex, swapToIndex) {\n    let temArrayForSwapping = _.cloneDeep(ArrayForSwapping);\n    const temp = temArrayForSwapping[swapFromIndex];\n    temArrayForSwapping[swapFromIndex] = temArrayForSwapping[swapToIndex];\n    temArrayForSwapping[swapToIndex] = temp;\n    return temArrayForSwapping;\n  }\n\n  updateSidebar(nodeData){\n    if(nodeData){\n      const index = this.totalAtrributeOptions.findIndex(obj => obj['attribute'] === 'Name');\n      this.totalAtrributeOptions[index]['options'].push(nodeData);\n    }\n  }\n\n  // check for rotate object\n  checkRotate() {\n        // check for selected value so the dropdown should not close on refresh\n        if(this.selectedAttributeOptions){\n          Object.keys(this.selectedAttributeOptions).forEach(selectedKey => {\n            if (this.selectedAttributeOptions[selectedKey].length > 0) {\n              this.totalAtrributeOptions = this.totalAtrributeOptions.filter(attr => {\n                if (attr && attr['attribute'] === selectedKey) {\n                  attr['rotate'] = true;\n                  return attr;\n                } else {\n                  return attr;\n                }\n              })\n            }\n        });\n      }\n  }\n\n  // for node properties\n  setNodeProperties(response){\n        if (response.hasOwnProperty('nodes')) {\n          this.totalNodesProperties = _.cloneDeep(response['nodes']);\n          this.sharedGraphData.setNodeProperties(this.totalNodesProperties);\n          if (this.totalNodesProperties) {\n            Object.keys(this.totalNodesProperties).forEach(keyName => {\n              if (keyName !== 'deleted' && keyName !== 'color' && keyName !== 'name' && keyName !== 'type') {\n                this.totalAtrributeOptions.push({ attribute: keyName, options: this.totalNodesProperties[keyName], rotate: false });\n              }\n            });\n          }\n          if (response.hasOwnProperty('relations')) {\n            this.totalRelationsProperties = _.cloneDeep(response['relations']);\n            this.sharedGraphData.setRelationProperties(this.totalRelationsProperties);\n          }\n          console.log(this.totalNodesProperties, this.totalRelationsProperties);\n        }\n        this.checkRotate();\n  }\n\n  // for types\n  setTypes(response) {\n    if(response) {\n      this.sharedGraphData.setProcessedData(this.processedData);\n      this.sharedGraphData.setNodeTypes2(this.nodeTypes2);\n      // this.typeOptions = this.nodeTypes2;\n      // this.totalAtrributeOptions.push({ attribute: 'Type', options: this.nodeTypes2, rotate: false });\n      this.checkRotate();\n      return true;\n    }\n  }\n\n\n  /**\n   * Hits search graph\n   * @description The function is a common function which will gather the selected filters from the sidebar and send it furthur\n   */\n  hitSearchGraph() {\n\n    const selectedAttributes = this.searchGraph();\n    const selectedRelations = this.relationSearchGraph();\n\n    console.log('search graph and relation search graph has returned the following ');\n    console.log(selectedAttributes);\n    console.log(selectedRelations);\n\n    // join both the request bodies into one and send it for search\n\n    const RequestBody = Object.assign({}, selectedRelations, selectedAttributes);\n\n    this.sharedGraphData.setGraphData(RequestBody);\n    // send the click event to reload the graph\n    const obj = { event: 'search' };\n    this.eventClicked.emit(obj);\n  }\n}\n","module.exports = \"<div class=\\\"container-fluid export-btn\\\">\\n    <button (click)=\\\"exportAsCsv('csv')\\\" class=\\\"circularBtn\\\"><i class=\\\"fas fa-download\\\"></i></button>\\n</div>\"","module.exports = \".export-btn button {\\n  background: #e4e4e4;\\n  color: #000;\\n  box-shadow: -4px 4px 14px -9px rgba(0, 0, 0, 0.75); }\\n\\n.export-btn button:active {\\n  box-shadow: none;\\n  transition: 0.5s; }\\n\\n.circularBtn {\\n  font-size: 1.5rem;\\n  width: 40px;\\n  border-radius: 50%;\\n  height: 40px;\\n  border: 0;\\n  box-shadow: 2px 9px 17px -1px #cccccc; }\\n\\n.circularBtn:active {\\n  box-shadow: none;\\n  transition: .5s; }\\n\\n.circularBtn:focus {\\n  outline: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkaXR5YS9wcm9qZWN0L25ldHdvcmtfdml6dWFsaXplcl9kMy9uZXR3b3JrLXZpc3VhbGl6ZXIvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2dyYXBoLWV4cG9ydGVyL2dyYXBoLWV4cG9ydGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsbUJBQW1CO0VBQ25CLFdBQVc7RUFHWCxrREFBa0QsRUFBQTs7QUFOMUQ7RUFTUSxnQkFBZ0I7RUFDaEIsZ0JBQWdCLEVBQUE7O0FBSXhCO0VBQ0ksaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFNBQVM7RUFHVCxxQ0FBb0QsRUFBQTs7QUFHeEQ7RUFDSSxnQkFBZ0I7RUFDaEIsZUFBZSxFQUFBOztBQUduQjtFQUNJLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZGFzaGJvYXJkLXYyLWNvcHkvY29tcG9uZW50cy9ncmFwaC1leHBvcnRlci9ncmFwaC1leHBvcnRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leHBvcnQtYnRuIHtcbiAgICBidXR0b24ge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZTRlNGU0O1xuICAgICAgICBjb2xvcjogIzAwMDtcbiAgICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAtNHB4IDRweCAxNHB4IC05cHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgICAgICAgLW1vei1ib3gtc2hhZG93OiAtNHB4IDRweCAxNHB4IC05cHggcmdiYSgwLCAwLCAwLCAwLjc1KTtcbiAgICAgICAgYm94LXNoYWRvdzogLTRweCA0cHggMTRweCAtOXB4IHJnYmEoMCwgMCwgMCwgMC43NSk7XG4gICAgfVxuICAgIGJ1dHRvbjphY3RpdmUge1xuICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiAwLjVzO1xuICAgIH1cbn1cblxuLmNpcmN1bGFyQnRuIHtcbiAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICB3aWR0aDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGJvcmRlcjogMDtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDJweCA5cHggMTdweCAtMXB4IHJnYmEoMjA0LCAyMDQsIDIwNCwgMSk7XG4gICAgLW1vei1ib3gtc2hhZG93OiAycHggOXB4IDE3cHggLTFweCByZ2JhKDIwNCwgMjA0LCAyMDQsIDEpO1xuICAgIGJveC1zaGFkb3c6IDJweCA5cHggMTdweCAtMXB4IHJnYmEoMjA0LCAyMDQsIDIwNCwgMSk7XG59XG5cbi5jaXJjdWxhckJ0bjphY3RpdmUge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogLjVzO1xufVxuXG4uY2lyY3VsYXJCdG46Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { GraphExportService } from 'src/app/modules/core/services/graph-export-service/graph-export.service';\nimport { ExcelService } from 'src/app/modules/shared/services/export-service/excel.service';\n\n@Component({\n  selector: 'app-graph-exporter',\n  templateUrl: './graph-exporter.component.html',\n  styleUrls: ['./graph-exporter.component.scss']\n})\nexport class GraphExporterComponent implements OnInit {\n\n  constructor(private fileService: GraphExportService, private excelService : ExcelService) { }\n\n  ngOnInit() {\n  }\n  exportAsCsv(format) {\n  this.fileService.getExportFormat(format)\n  .subscribe(fileData => {\n    const element = this.fileService.initiateDownload('a', fileData);\n    // initiate download\n    element.click();\n  }, error => {\n    //check for ok and status\n    if (error.ok === false && error.status === 200) {\n      const element = this.fileService.initiateDownload('a', error['text']);\n    // initiate download\n    element.click();\n    } else {\n      console.error('An error occured while getting file content from the service ', error);\n    }\n  });\n}\n}\n","module.exports = \"<app-global-loader *ngIf=\\\"loader\\\"></app-global-loader>\\n<app-color-panel *ngIf=\\\"!loader\\\"></app-color-panel>\\n<div class=\\\"wrapper-countlimit\\\" *ngIf=\\\"!loader\\\">\\n    <div class=\\\"selected-count\\\">{{selectedCount}} Elements Found</div>\\n    <div class=\\\"nodeLimit\\\">\\n        <p class=\\\"nodelimit-head\\\">Element Limit :</p>\\n        <input type=\\\"text\\\" [(ngModel)]=nodeLimit (ngModelChange)=\\\"limitChange(nodeLimit, popup)\\\" suiPopup popupText=\\\"{{errorMessage}}\\\" popupTrigger=\\\"manual\\\" #popup=\\\"suiPopup\\\" (keyup)=\\\"sendLimit($event, nodeLimit)\\\">\\n    </div>\\n    <div class=\\\"float-right-toolbar\\\">\\n        <div class=\\\"creationToolbar\\\">\\n            <app-create-nodes [nodeTypes]=\\\"totalTypesArray\\\" \\n            [editData]=\\\"editNodeData\\\" [editRelData]=\\\"editRelationData\\\" \\n            [hideDelModal]=\\\"hideDelModal\\\" (nodeBtnEvent)=\\\"nodeEventCapture($event)\\\" \\n            (edgeBtnEvent)=\\\"edgeEventCapture($event)\\\" [newNodeCreated]=\\\"promptRelationCreateAfterNode\\\"\\n            (cleanData)=\\\"cleanPropertyBindingData($event)\\\" (restoreEvent)=\\\"initRestoreData($event)\\\"\\n            [restoredDataResponse]=\\\"restoredData\\\"></app-create-nodes>\\n        </div>\\n        <!-- graph exporter -->\\n        <div class=\\\"export\\\">\\n            <app-graph-exporter></app-graph-exporter>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"graph-container\\\" id=\\\"graphViewer\\\">\\n</div>\\n<ng-template *ngIf=\\\"showlimiterror\\\" let-popup #popupTemplate>\\n    <div class=\\\"header\\\">Rating</div>\\n    <div class=\\\"content\\\">\\n        <sui-rating class=\\\"star\\\" (click)=\\\"popup.close()\\\"></sui-rating>\\n    </div>\\n</ng-template>\"","module.exports = \".graph-container {\\n  background: #F5F5F5;\\n  height: 80vh;\\n  width: 100%; }\\n\\n.selected-count {\\n  background: #F5F5F5;\\n  word-break: break-all;\\n  cursor: pointer;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  font-size: 16px;\\n  color: #30333a;\\n  border-radius: 3px;\\n  padding: 1em;\\n  float: left; }\\n\\n.wrapper-countlimit {\\n  width: 80%;\\n  float: right; }\\n\\n.nodeLimit {\\n  max-width: 200px;\\n  top: 50px;\\n  float: left;\\n  border-radius: 3px;\\n  padding: 1em;\\n  background: #F5F5F5;\\n  outline: none; }\\n\\n.float-right-toolbar {\\n  display: inline-flex;\\n  width: 63%;\\n  justify-content: flex-end; }\\n\\n.creationToolbar {\\n  display: inline;\\n  top: 50px;\\n  padding: 1em;\\n  outline: none; }\\n\\n.export {\\n  margin-top: 15px; }\\n\\n.nodeLimit input {\\n  width: 35%;\\n  border: 0.3px solid #000;\\n  padding: 5px;\\n  border-radius: 2px; }\\n\\n.nodeLimit:focus {\\n  outline: none; }\\n\\n.nodelimit-head {\\n  display: inline;\\n  margin-right: 3px; }\\n\\n@media screen and (max-width: 1100px) {\\n  .graph-container,\\n  .selected-count {\\n    width: 75%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FkaXR5YS9wcm9qZWN0L25ldHdvcmtfdml6dWFsaXplcl9kMy9uZXR3b3JrLXZpc3VhbGl6ZXIvY2xpZW50L3NyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2dyYXBoLXYyLXZpc3VhbGl6ZXIvZ3JhcGgtdmlzdWFsaXplci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osV0FBVyxFQUFBOztBQUdmO0VBQ0ksbUJBQW1CO0VBQ25CLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsMkRBQTJEO0VBQzNELGVBQWU7RUFDZixjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBR2Y7RUFDSSxVQUFVO0VBQ1YsWUFBWSxFQUFBOztBQUdoQjtFQUNJLGdCQUFnQjtFQUNoQixTQUFTO0VBQ1QsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxvQkFBb0I7RUFDcEIsVUFBVTtFQUNWLHlCQUF5QixFQUFBOztBQUk3QjtFQUNJLGVBQWU7RUFDZixTQUFTO0VBQ1QsWUFBWTtFQUNaLGFBQWEsRUFBQTs7QUFHakI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxVQUFVO0VBQ1Ysd0JBQXdCO0VBQ3hCLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksZUFBZTtFQUNmLGlCQUFpQixFQUFBOztBQUdyQjtFQUNJOztJQUVJLFVBQVUsRUFBQSxFQUNiIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9kYXNoYm9hcmQtdjItY29weS9jb21wb25lbnRzL2dyYXBoLXYyLXZpc3VhbGl6ZXIvZ3JhcGgtdmlzdWFsaXplci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmFwaC1jb250YWluZXIge1xuICAgIGJhY2tncm91bmQ6ICNGNUY1RjU7XG4gICAgaGVpZ2h0OiA4MHZoO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4uc2VsZWN0ZWQtY291bnQge1xuICAgIGJhY2tncm91bmQ6ICNGNUY1RjU7XG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBjb2xvcjogIzMwMzMzYTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIGZsb2F0OiBsZWZ0O1xufVxuXG4ud3JhcHBlci1jb3VudGxpbWl0IHtcbiAgICB3aWR0aDogODAlO1xuICAgIGZsb2F0OiByaWdodDtcbn1cblxuLm5vZGVMaW1pdCB7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICB0b3A6IDUwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBiYWNrZ3JvdW5kOiAjRjVGNUY1O1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG5cbi5mbG9hdC1yaWdodC10b29sYmFyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICB3aWR0aDogNjMlO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG5cblxuLmNyZWF0aW9uVG9vbGJhciB7XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIHRvcDogNTBweDtcbiAgICBwYWRkaW5nOiAxZW07XG4gICAgb3V0bGluZTogbm9uZTtcbn1cblxuLmV4cG9ydCB7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuLm5vZGVMaW1pdCBpbnB1dCB7XG4gICAgd2lkdGg6IDM1JTtcbiAgICBib3JkZXI6IDAuM3B4IHNvbGlkICMwMDA7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLm5vZGVMaW1pdDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbn1cblxuLm5vZGVsaW1pdC1oZWFkIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICcxMTAwcHgnKSB7XG4gICAgLmdyYXBoLWNvbnRhaW5lcixcbiAgICAuc2VsZWN0ZWQtY291bnQge1xuICAgICAgICB3aWR0aDogNzUlO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, SimpleChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { GraphDataService } from 'src/app/modules/core/services/graph-data-service/graph-data.service';\nimport { Network, DataSet} from 'vis';\nimport * as _ from 'lodash';\nimport { SharedGraphService } from 'src/app/modules/core/services/shared-graph.service';\n\nimport { elementOperation } from './../../interfaces/elementOperation';\nimport {AlgoRunnerExportInterface} from './../../interfaces/algo-runner-export';\n\nimport {MaterialService} from './../../../custom-material/services/material-core/material.service';\nimport { ColorServiceService } from '../../services/colorService/color-service.service';\nimport { ToolbarSharedService } from 'src/app/modules/algo-runner/services/toolbar-shared-service/toolbar-shared.service';\nimport { CoreFilterService } from 'src/app/modules/redux/services/core-filter-service/core-filter.service';\n\n@Component({\n  selector: 'app-graph-visualizer',\n  templateUrl: './graph-visualizer.component.html',\n  styleUrls: ['./graph-visualizer.component.scss']\n})\nexport class GraphVisualizerComponent implements OnInit {\n\n  @Input() event: Object;\n  @Input() username: string;\n  @Input() totalTypesArray = [];\n  @Output() newNodeCreated = new EventEmitter<object>();\n  @Output() nodeLimitEvent = new EventEmitter<string | null>();\n\n  private NODE_CREATE_TEXT_SUCCESS = 'Node has been created successfully !';\n  private NODE_CREATE_TEXT_ERROR = 'An error occured while creating a new node !';\n  private NODE_CREATE_TEXT_ERROR_VIS = 'An error occured while displaying the new node !';\n  private NODE_UPDATE_TEXT_SUCCESS = 'Node has been updated successfully !';\n  private NODE_UPDATE_TEXT_ERROR = 'An error occured while updating the node !';\n  private NODE_UPDATE_TEXT_ERROR_VIS = 'An error occured while displaying updated node in the graph !';\n  private NODE_DELETE_TEXT_SUCCESS = 'Node has been deleted successfully !';\n  private NODE_DELETE_TEXT_ERROR = 'An error occured while deleting the Node !';\n  private RELATION_CREATE_TEXT_SUCCESS = 'New Relationship created successfully !';\n  private RELATION_CREATE_TEXT_ERROR = 'An error occured while creating new relationship !';\n  private RELATION_CREATE_TEXT_ERROR_VIS = 'An error occured while displaying the new relationship in graph !';\n  private RELATION_UPDATE_TEXT_SUCCESS = 'Relationship has been updated successfully !';\n  private RELATION_UPDATE_TEXT_ERROR = 'An error occured while upating the relationship !';\n  private RELATION_DELETE_TEXT_SUCCESS = 'Relationship has been deleted successfully !';\n  private RELATION_DELETE_TEXT_ERROR = 'An error occured while deleting the relationship from the database !';\n  private DATA_RESTORE_TEXT_SUCCESS = 'Data has been restored successfully !'\n  private DATA_RESTORE_TEXT_ERROR = 'An error occured while restoring the data !'\n  private showDeletedData = null;\n  public promptRelationCreateAfterNode = null;\n  public requestedNodeDetails = null;\n  public graphData = {};\n  public errorMessage = '';\n  public loader = true;\n  public defaultNodeLimit = 149;\n  selectedCount;\n  public nodeLimit: any = 149;\n  public emptyNodeLimit = 179;\n  public colorConfig = {};\n  public editNodeData = null;\n  public editRelationData = null;\n  public restoredData = null;\n  public network: any;\n  @Output() networkInstance = new EventEmitter<any>();\n  public hideDelModal = false;\n  // graph options to change the visualization configuration of visjs\n  private graphOptions = {\n    physics: false,\n    interaction: {\n      navigationButtons: true\n    },\n    edges: {\n      smooth: {\n        type: 'dynamic'\n      }\n    },\n    nodes: {\n      shape: 'dot',\n      scaling: {\n        customScalingFunction: (min, max, total, value) => {\n          return value / total;\n        },\n        min: 5,\n        max: 150\n      }\n    }\n  };\n\n  public allGraphData = {};\n  public filteredGraphData = {};\n\n  // Variable to send the graph data and filtered query object to algo runner for future use\n  private algoRunnerData: AlgoRunnerExportInterface = {};\n\n  constructor(\n    private graphService: GraphDataService,\n    private sharedGraphService: SharedGraphService,\n    private snackBar: MaterialService,\n    private colorService: ColorServiceService, private algoRunnerShrdSrvc: ToolbarSharedService,\n    private CoreFilterSrvc: CoreFilterService) { }\n\n  ngOnInit() {\n    this.loader = true;\n    this.displayInitialGraph();\n    this.sharedGraphService.getNodeByIDs.subscribe(nodeIDArray => {\n      // recieved array IDs\n      console.log('recieved array ID for processing ', nodeIDArray);\n      let nodesByIDs = this.getNodeDetails(nodeIDArray);\n      console.log('processed data now is  ', nodesByIDs);\n      this.sharedGraphService.sendNodeDetails(nodesByIDs);\n    }, err => { });\n\n    // subscribe to showDeletedData so that appropriate data can be fetched\n    this.sharedGraphService.showDeletedData.subscribe(toggle => {\n      if (toggle !== null && (toggle.toString() === 'true' || toggle.toString() === 'false')) {\n        this.loader = true;\n        // if the toggle variable is  only true and false and nothing else\n        this.showDeletedData = toggle;\n        // console.log('recieved toggle', toggle);\n      } else {\n        // set to false by default\n        this.showDeletedData = false;\n      }\n      if (this.showDeletedData) {\n        this.showAllData();\n      } else {\n        if (this.allGraphData.hasOwnProperty('nodes')) {\n          this.showFilteredData();\n        }\n      }\n    }, err => {\n      // set to false by default\n      console.error('An error occured while subscribing to the toggle for deleted data', err);\n      this.showDeletedData = false;\n      this.displayInitialGraph();\n    });\n\n    this.colorService.colorObj$.subscribe(response => {\n      this.colorConfig = response;\n    });\n  }\n\n  displayInitialGraph() {\n    this.graphService.getInitialDataV3().subscribe(result => {\n      console.log('recieved data from graph service', result);\n      // set data for vis\n      if (result.hasOwnProperty('seperateNodes')) {\n        // set color config using nodes color properties\n        this.updateColorConfigObject(result);\n        // add colors to nodes\n        result = this.addColors(result);\n        // store all data without any filter\n        this.allGraphData['nodes'] = result['seperateNodes'];\n        this.allGraphData['edges'] = result['seperateEdges'];\n        // to update filtered data\n      this.setFilteredData(this.showDeletedData);\n        // check for show deleted toggel\n        if (this.showDeletedData) {\n          // show all data\n          this.graphData['nodes'] = new DataSet(this.allGraphData['nodes']);\n        } else {\n          // show filtered data\n          this.graphData['nodes'] = new DataSet(this.filteredGraphData['nodes']);\n        }\n        this.selectedCount = this.graphData['nodes'].length;\n      }\n      if (result.hasOwnProperty('seperateEdges')) {\n        // check for show deleted toggel\n        if (this.showDeletedData) {\n          this.graphData['edges'] = new DataSet(this.allGraphData['edges']);\n        } else {\n          // show filtered data\n          this.graphData['edges'] = new DataSet(this.filteredGraphData['edges']);\n        }\n      }\n      // console.log('graphData :', this.graphData);\n      // display data\n      const container = document.getElementById('graphViewer');\n      this.loader = false;\n      this.network = new Network(container, this.graphData, this.graphOptions);\n\n      // add data to redux store\n      const dataForAlgoRunner = {\n        completeGraph: this.allGraphData,\n        deletedGraph: this.filteredGraphData,\n        propjectedGraph: this.graphData\n      };\n      const requestBody = this.sharedGraphService.getGraphData() || {};\n      this.updateAlgoRunnerObject(dataForAlgoRunner);\n      this.CoreFilterSrvc.updateAppliedFiltersData({ request: requestBody, data: dataForAlgoRunner });\n\n      // activating double click event for editing node or relationship\n      console.log('registering double click');\n      this.network.on('doubleClick', (event) => {\n        this.hideDelModal = false;\n        console.log('double click');\n        this.doubleClickHandler(event);\n      });\n    }, err => {\n      console.error('An error occured while retrieving initial graph data', err);\n      this.loader = true;\n      this.graphData = {};\n    });\n    // activate double click event for editing a node or a relationship\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.event) {\n      const searchEvent = this.event['event'];\n      if (searchEvent === 'search' || searchEvent === 'reset') {\n        this.event = searchEvent;\n        this.changeNodeColor();\n      }\n    }\n  }\n  changeNodeColor() {\n    if (this.event === 'search') {\n      this.loader = true;\n      this.showGraphData();\n    } else if (this.event === 'reset') {\n      this.loader = true;\n      this.nodeLimit = this.defaultNodeLimit;\n      this.displayInitialGraph();\n    } else {\n      const previousData = _.cloneDeep(this.graphData);\n      // tslint:disable-next-line: no-string-literal\n      if (!!this.graphData['nodes']) {\n        let temgraph = this.graphData['nodes'].map(node => {\n          if (this.event === node.type[0]) {\n            // node.color = this.colorConfig.defaultColor[node.type[0]];\n          } else {\n            // node.color='#95BFF8';\n            return node;\n          }\n          return node;\n        });\n        previousData.nodes.clear();\n        previousData.nodes = new DataSet(_.cloneDeep(temgraph));\n        this.graphData = previousData;\n        this.reinitializeGraph();\n      }\n    }\n  }\n\n  reinitializeGraph() {\n    const container = document.getElementById('graphViewer');\n    this.network.setData(this.graphData);\n    this.network.on('doubleClick', (event) => {\n      this.hideDelModal = false;\n      this.doubleClickHandler(event);\n    });\n  }\n  showGraphData() {\n    this.loader = true;\n    let requestBody = this.sharedGraphService.getGraphData();\n    // check for node limit\n    if (this.nodeLimit === \"\") {\n      requestBody[\"limit\"] = this.emptyNodeLimit;\n    } else if (!isNaN(this.nodeLimit)) {\n      requestBody[\"limit\"] = this.nodeLimit;\n    } else {\n      requestBody[\"limit\"] = this.defaultNodeLimit;\n    }\n    // send the data to algo runner for future use\n    this.updateAlgoRunnerObject({nodeFilter: requestBody});\n\n    this.graphService.getSearchDataV2(requestBody).subscribe(result => {\n      // console.log('recieved data from graph service', result);\n      // set data for vis\n      if (result.hasOwnProperty('seperateNodes')) {\n        result = this.addColors(result);\n        //this.graphData['nodes'] = new DataSet(result['seperateNodes']);\n        // store all data without any filter\n        // this.allGraphData['nodes'] = new DataSet(result['seperateNodes']); \n        this.allGraphData['nodes'] = result['seperateNodes'];\n        this.allGraphData['edges'] = result['seperateEdges'];\n        // to update filtered data\n        this.setFilteredData();\n        //check for show deleted \n        if (this.showDeletedData) {\n          // show all data\n          this.graphData['nodes'] = new DataSet(this.allGraphData['nodes']);\n\n        } else {\n          // remove deleted data\n          this.graphData['nodes'] = new DataSet(this.filteredGraphData['nodes']);\n        }\n        this.selectedCount = this.graphData['nodes'].length;\n      }\n      if (result.hasOwnProperty('seperateEdges')) {\n        if (this.showDeletedData) {\n          this.graphData['edges'] = new DataSet(this.allGraphData['edges']);\n        } else {\n          this.graphData['edges'] = new DataSet(this.filteredGraphData['edges']);\n        }\n\n      }\n      // console.log('graphData :', this.graphData);\n      // display data\n\n      // send the data to algo runner for future use\n      let dataForAlgoRunner = {\n        completeGraph: this.allGraphData,\n        deletedGraph: this.filteredGraphData,\n        propjectedGraph: this.graphData\n      };\n      this.updateAlgoRunnerObject(dataForAlgoRunner);\n\n      // update the redux store with this data\n      this.CoreFilterSrvc.updateAppliedFiltersData({request: requestBody, data: dataForAlgoRunner});\n\n      const container = document.getElementById('graphViewer');\n      this.network = new Network(container, this.graphData, this.graphOptions);\n      this.network.on('doubleClick', (event) => {\n        this.hideDelModal = false;\n        this.doubleClickHandler(event);\n      });\n      this.loader = false;\n    }, err => {\n      console.error('An error occured while retrieving initial graph data', err);\n      this.loader = true;\n      this.graphData = {};\n    });\n  }\n\n  /**\n   * Updates algo runner object\n   * @description It is used to update the global algo runner object at various times the apply/reset/showDeleted buttons are used\n   * @param newObject\n   */\n  updateAlgoRunnerObject(newObject: AlgoRunnerExportInterface) {\n    if (newObject.hasOwnProperty('completeGraph')) {\n      this.algoRunnerData.completeGraph = newObject.completeGraph;\n    }\n    if (newObject.hasOwnProperty('deletedGraph')) {\n      this.algoRunnerData.deletedGraph = newObject.deletedGraph;\n    }\n    if (newObject.hasOwnProperty('nodeFilter')) {\n      this.algoRunnerData.nodeFilter = newObject.nodeFilter;\n    }\n    if (newObject.hasOwnProperty('relationFilter')) {\n      this.algoRunnerData.relationFilter = newObject.relationFilter;\n    }\n    if (newObject.hasOwnProperty('propjectedGraph')) {\n      this.algoRunnerData.propjectedGraph = newObject.propjectedGraph;\n    }\n    // send the final prepared object\n    this.algoRunnerShrdSrvc.sendRecentFilters(this.algoRunnerData);\n  }\n\n  updateColorConfigObject(resultObj){\n    let temColorObj = {};\n    let flag = false;\n    resultObj['seperateNodes'].forEach(node => {\n      if (node.hasOwnProperty('type') && node.type.length > 0 && node.hasOwnProperty('properties')) {\n        if (!temColorObj[node.type[0]]){\n          if (node['properties']['color']){\n            temColorObj[node.type[0]] = node['properties']['color'];\n          }else {\n            temColorObj[node.type[0]] = this.colorConfig['defaultColor'][node.type[0]];\n          }\n        } else {\n          if (node.type[0] === 'Student' && node.label === this.username) {\n            node.type[0] = 'You';\n            temColorObj['You'] = this.colorConfig['defaultColor']['Spot'];\n            flag = true;\n          }\n        }\n      }\n      });\n\n    if (!flag) {\n\n      resultObj['seperateNodes'][5].type[0] = 'You';\n      temColorObj['You'] = this.colorConfig['defaultColor']['Spot'];\n    }\n    this.colorService.updateDefaultColor(temColorObj);\n  }\n\n  addColors(resultObj) {\n    // if the user opted for deleted data, simply set deleted default color to all the nodes\n    resultObj['seperateNodes'].forEach(node => {\n      if (node.hasOwnProperty('type') && node.type.length > 0) {\n        if (node['properties']['deleted'] === \"true\" || node['properties']['deleted'] === true) {\n          node['color'] = this.colorConfig['deletedColor']['colorCode'];\n        } else {\n          // if the node has a color property, assign that else assign the defaults one\n          node = this.shiftColorKey(node);\n          if (!node.hasOwnProperty('color')) {\n            node['color'] = this.colorConfig['defaultColor'][node.type[0]];\n        }\n        }\n        // node['color'] = this.showDeletedData ? this.colorConfig.deletedColor.colorCode : this.colorConfig.defaultColor[node.type[0]];\n        // // temporary fix, add exception for societal platform\n        // if (node.label === 'Societal Platform Team') {\n        //   node['color'] = this.colorConfig.defaultColor[node.type[0]];\n        // }\n      }\n    });\n    // if the user opted for deleted data, simply set deleted default color to all the edges\n    resultObj['seperateEdges'].forEach(edge => {\n      if (edge.hasOwnProperty('type') && edge.type.length > 0) {\n        if (edge['properties']['deleted'] === \"true\" || edge['properties']['deleted'] === true) {\n          edge['color']['color'] = this.colorConfig['deletedColor']['colorCode'];\n          edge['color']['highlight'] = this.colorConfig['deletedColor']['highlightColorCode'];\n        } else {\n          // edge['color'] = this.colorConfig.defaultColor[edge.type[0]];\n        }\n      }\n    });\n    // console.log(nodeObj);\n    return resultObj;\n\n  }\n\n  addColorProperty(node) {\n      if (node.hasOwnProperty('type') && node.type.length > 0 && node.hasOwnProperty('properties')) {\n        if (node['properties'].hasOwnProperty('color') && node['properties']['color'] === 'not available') {\n        let index;\n        let nodeType : string;\n        nodeType = node.type;\n        if(this.colorConfig['defaultColor'][nodeType]){\n            node['properties']['color'] = this.colorConfig['defaultColor'][nodeType];\n        }\n      }\n    }\n    return node;\n  }\n\n  private limitChange(limit, popup) {\n    if (limit === \"\") {\n      this.errorMessage = 'Only valid numbers allowed'\n      popup.open();\n      window.setTimeout(() => {\n        popup.close();\n      }, 3000)\n    } else if (!isNaN(limit)) {\n      this.nodeLimit = parseInt(limit);\n    } else {\n      this.errorMessage = 'Only valid numbers allowed'\n      popup.open();\n      window.setTimeout(() => {\n        popup.close();\n      }, 3000)\n    }\n\n  }\n\n  sendLimit(event, nodeLimit) {\n    if (event['key'] === 'Enter') {\n      this.nodeLimitEvent.emit(this.nodeLimit);\n    } else {\n      this.nodeLimitEvent.emit(null);\n    }\n  }\n\n  nodeEventCapture(event) {\n    if (Object.keys(event).length > 0) {\n\n      if (event.action === 'create') {\n        // handle the functionaluty of creating a node\n        this.network.once('click', (clickEvent) => {\n          console.log(clickEvent);\n          // user should be able to fire an event onlyonce per dropdown click\n          if (clickEvent.nodes.length > 0 || clickEvent.edges.length > 0) {\n            // obviously a node cannot be created over another node or edge\n            alert('please click on an empty space to create a node');\n          } else {\n            // user clicked on a good place to  create a node\n            // console.log(this.graphData);\n            if(event.data.properties['color'] === 'not available'){\n              event.data = this.addColorProperty(event.data);\n            }else{\n              this.colorService.insertIntoDefaultColor({type: event.data.type,color: event.data.properties.color});\n            }\n            let newNodeData = {\n              id: event.data.id,\n              label: event.data.properties.Name,\n              type: [event.data.type],\n              properties: event.data.properties\n            };\n\n            // let newNodeForVis = _.cloneDeep(newNodeData);\n            // make a request to create a node, if it succeedes only then show in the graph\n            this.graphService.createNewNode(newNodeData).subscribe(response => {\n              //update sidebar dropdown\n              this.newNodeCreated.emit({ event: \"NodeEvent_create\" + response['seperateNodes'][0].id });\n              // add additional data for vis layout\n              // newNodeForVis = this.addData(newNodeForVis, clickEvent, event);\n              try {\n                let visNode = _.cloneDeep(this.addData(response['seperateNodes'][0], clickEvent, event));\n                // to remove deleted key from tooltip\n                // Add the color to the newly created node\n                visNode['color'] = newNodeData.properties['color'];\n                visNode['title'] = this.stringifyProperties(visNode);\n                // add the new node to the vis\n                this.graphData['nodes'].add([visNode]);\n                // to update all data array while a new node is created\n                let eleObj: elementOperation = {\n                  element: 'nodes',\n                  event: \"create\",\n                  data: response['seperateNodes'][0]\n                };\n                this.updateGraphArray(eleObj);\n                // emit the createNodes component that a node has been put into the graph, prompt user to create a relation\n                // send the data of new node for relationPrompt\n\n                // notify user\n                this.snackBar.success({message: this.NODE_CREATE_TEXT_SUCCESS});\n\n                this.promptRelationCreateAfterNode = _.cloneDeep({ created: true, node: visNode });\n              } catch (addErr) {\n                console.error('Error while adding the data node to vis ', addErr['message']);\n                this.snackBar.error({message: this.NODE_CREATE_TEXT_ERROR_VIS});\n\n              }\n            }, error => {\n              console.error('An error occured while creating node in  database ', error);\n              this.snackBar.error({message: this.NODE_CREATE_TEXT_ERROR});\n\n            });\n          }\n        });\n      } else if (event.action === 'edit' && !event.hasOwnProperty('process')) {\n        // handle the functionality of editing the node\n        console.log('Node edit is being clicked');\n        this.network.once('click', (clickEvent) => {\n          console.log(clickEvent);\n          let clickedNode = this.graphData['nodes'].get(clickEvent.nodes);\n          // if there are multiple nodes one above another, always select the top most one\n          if (clickedNode.length > 0) {\n            clickedNode = _.cloneDeep(clickedNode[0]);\n          }\n          console.log('clicked Node is ', clickedNode);\n          this.startEditProcess(clickedNode);\n        });\n      } else if (event.action === 'edit' && event.hasOwnProperty('process') && event.process === 'complete') {\n        // this will be invoked when the user has clicked on edit feature and submitted the form with new data\n        console.log('edit event captured with new data', event.data);\n        // the process is to first create a node for data base update\n        // once the node is updated , use the updated node from the database to update in the visJS\n        let newNodeData = {\n          id: event.data.id,\n          label: event.data.properties.Name,\n          type: [event.data.type],\n          properties: event.data.properties\n        };\n\n        this.graphService.updateNode(newNodeData).subscribe(response => {\n          console.log('response from update node ', response);\n          try {\n            const updatedNode = response['seperateNodes'][0];\n            // logic to update node in vis data set\n            let visNode = this.graphData['nodes'].get(updatedNode['id']);\n            // update everything except color and id\n            if ([visNode].length == 1) {\n              visNode['properties'] = updatedNode['properties'];\n              visNode['label'] = updatedNode['label'];\n              visNode['title'] = updatedNode['title'];\n              visNode['type'] = updatedNode['type'];\n              console.log('update node details are ', visNode);\n              // node was present, simply update it now\n              if (this.showDeletedData) {\n                this.graphData['nodes'].update(visNode);\n              } else {\n                let tem = _.cloneDeep(visNode);\n                tem['title'] = this.stringifyProperties(tem);\n                this.graphData['nodes'].update(tem);\n              }\n\n              // update all+filtered graph array\n              let eleObj: elementOperation = {\n                element: 'nodes',\n                event: \"edit\",\n                data: visNode\n              };\n              this.updateGraphArray(eleObj);\n              //update sidebar dropdown\n              this.newNodeCreated.emit({ event: 'NodeEvent_update' + response['seperateNodes'][0].id });\n            }\n            console.log(visNode);\n            this.snackBar.success({message: this.NODE_UPDATE_TEXT_SUCCESS});\n\n          } catch (updateErr) {\n            // any error encountered while updating the node in vis js\n            console.error('Error while upating the data node to vis ', updateErr['message']);\n            this.snackBar.error({message: this.NODE_UPDATE_TEXT_ERROR_VIS});\n          }\n        }, err => {\n          console.error('An error occured while updating node in database ', err);\n          this.snackBar.error({message: this.NODE_UPDATE_TEXT_ERROR});\n        });\n      } else if (event.action === 'delete') {\n        const nodeID = event.data.id;\n        // get the list of relation ids which are connected to this node\n        const connectedEdgeIDs = this.network.getConnectedEdges(nodeID);\n        // hit the delete node api\n        let requestOption = {\n          id: nodeID,\n          relations: connectedEdgeIDs\n        }\n        this.graphService.deleteNode(requestOption).subscribe(response => {\n          // remove the node in vis graph and connected edges, if any\n          const removedNode = response['seperateNodes'];\n          if (response['seperateEdges'].length > 0) {\n            let removedEdges = response['seperateEdges'];\n            // update the edges\n            removedEdges.map(removed => {\n              // update all+filtered graph array\n              let eleObj: elementOperation = {\n                element: 'edges',\n                event: \"delete\",\n                data: removed\n              };\n              this.updateGraphArray(eleObj);\n            });\n            if (this.showDeletedData) {\n              this.graphData['edges'].update(removedEdges);\n            } else {\n              this.graphData['edges'].remove(removedEdges);\n            }\n          }\n          // update all+filtered array\n          let eleObj: elementOperation = {\n            element: 'nodes',\n            event: \"delete\",\n            data: response['seperateNodes'][0]\n          };\n          this.updateGraphArray(eleObj);\n          // update the node in vis\n          removedNode[0]['color'] = this.colorConfig['deletedColor']['colorCode'];\n          if (this.showDeletedData) {\n            this.graphData['nodes'].update(removedNode);\n          } else {\n            this.graphData['nodes'].remove(removedNode);\n          }\n          this.hideDelModal = _.cloneDeep(true);\n          //update sidebar dropdown\n          this.newNodeCreated.emit({ event: 'NodeEvent_delete' + response['seperateNodes'][0].id });\n          this.snackBar.success({message: this.NODE_DELETE_TEXT_SUCCESS});\n        }, err => {\n          console.error('An error occured while reading response for node delete ', err);\n          this.snackBar.error({message: this.NODE_DELETE_TEXT_ERROR});\n        });\n      } else {\n        // invalid click event\n        console.error('An invalid click event retrieved ', event);\n      }\n    }\n  }\n\n  edgeEventCapture(event) {\n    if (Object.keys(event).length > 0) {\n      if (event.action === 'create') {\n        // handle the functionaluty of creating a node\n        let newRelationData = {\n          type: [event.data.type],\n          properties: event.data.properties,\n          from: event.data.from,\n          to: event.data.to\n        };\n        // make a request to create a node, if it succeedes only then show in the graph\n        this.graphService.createNewRelation(newRelationData).subscribe(response => {\n          console.log(response);\n\n          try {\n            let visRelation = _.cloneDeep(response['seperateEdges'][0]);\n            // to remove deleted key from tooltip\n            this.newNodeCreated.emit({ event: \"NodeEvent_create\" + response['seperateEdges'][0] });\n            visRelation['title'] = this.stringifyProperties(visRelation);\n            // add the new node to the vis\n            // first get the edge, if it is already present, simply update it else add it\n            let isAlreadyPresent = this.graphData['edges'].get(visRelation['id']);\n            let eleObj: elementOperation = {\n              element: 'edges',\n              event: \"edit\",\n              data: response['seperateEdges'][0]\n            };\n            if (isAlreadyPresent !== null) {\n              //update it \n              this.graphData['edges'].update([visRelation]);\n              // update edge in allgraphdata and filtered data array\n              this.updateGraphArray(eleObj);\n            } else {\n              this.graphData['edges'].add([visRelation]);\n              // add new edge to allgraphdata and filtered data array\n              eleObj.event = \"create\";\n              this.updateGraphArray(eleObj);\n            }\n            this.snackBar.success({message: this.RELATION_CREATE_TEXT_SUCCESS});\n          } catch (addErr) {\n            console.log('Error while adding the data relation to vis ', addErr['message']);\n            this.snackBar.error({message: this.RELATION_CREATE_TEXT_ERROR_VIS});\n          }\n        }, error => {\n          console.log('error while reading new relation data from service ', error);\n          this.snackBar.error({message: this.RELATION_CREATE_TEXT_ERROR});\n        });\n      } else if (event.action === 'edit') {\n        // capture the details of the relationship clicked by the user, clean it if needed and send for use\n        // hit the update relation service and updae it in visJS too\n        const relationData = _.cloneDeep(event.data);\n        if (relationData.hasOwnProperty('id') && relationData.hasOwnProperty('type')) {\n          // object has atleast id and type key, move ahead\n          this.graphService.updateRelation(relationData).subscribe(response => {\n            const newRelation = response['seperateEdges'][0];\n            this.updateRelationinVIS(newRelation);\n            this.snackBar.success({message: this.RELATION_UPDATE_TEXT_SUCCESS});\n          }, err => {\n            console.error('An error occured while reading the updated relation data', err);\n            this.snackBar.error({message: this.RELATION_UPDATE_TEXT_ERROR});\n          });\n        }\n      } else if (event.action === 'delete') {\n        // handle the functionality of deleting the node\n        let relationID = null;\n        // capture the relation id and send delete request\n        if (event.data.hasOwnProperty('id')) {\n          relationID = event.data.id;\n          // create the delete request\n          let requestObj = {\n            id: relationID\n          };\n          this.graphService.deleteRelation(requestObj).subscribe(response => {\n            console.log('recieved some response', response['seperateEdges']);\n            // once database relation is deleted, remove it from visGraph also\n            let deletedRel = _.cloneDeep(response['seperateEdges'])\n            // update all+filtered graph array\n            let eleObj: elementOperation = {\n              element: 'edges',\n              event: \"delete\",\n              data: response['seperateEdges']\n            };\n            this.updateGraphArray(eleObj);\n            if (this.showDeletedData) {\n              deletedRel['color']['color'] = this.colorConfig['deletedColor']['colorCode'];\n              deletedRel['color']['highlight'] = this.colorConfig['deletedColor']['highlightColorCode'];\n              this.graphData['edges'].update([deletedRel]);\n            } else {\n              this.graphData['edges'].remove([deletedRel]);\n            }\n            this.hideDelModal = true;\n            this.snackBar.success({message: this.RELATION_DELETE_TEXT_SUCCESS});\n          }, err => {\n            console.error('An error occured while reading response for relation delete ', err);\n            this.snackBar.error({message: this.RELATION_DELETE_TEXT_ERROR});\n          });\n        } else {\n          console.warn('did not recieve the id of relation for deletion in edgeEventCapture');\n        }\n      } else {\n        // invalid click event\n        console.error('An invalid click event retrieved ', event);\n      }\n    }\n  }\n\n  updateNodesInVis(nodesArray) {\n    // update the nodes in the data set\n    if (Array.isArray(nodesArray)) {\n      nodesArray.forEach(node => {\n        let oldNodeID = node['id'];\n        let oldNode = this.graphData['nodes'].get(oldNodeID);\n        // update the old node with new node\n        if (!!oldNode) {\n          oldNode['properties'] = node['properties'];\n          oldNode = this.addNodeColor(node);\n          // update all+filtered graph array\n          let eleObj: elementOperation = {\n            element: 'nodes',\n            event: \"restore\",\n            data: oldNode\n          };\n          this.updateGraphArray(eleObj);\n          // update sidebar name\n          this.newNodeCreated.emit({ event: \"NodeEvent_restore_\" + node['label'] });\n          // set it back in VISJS\n          this.graphData['nodes'].update(oldNode);\n          console.log('updated node ', oldNode);\n        } else {\n          console.error(`Provided node ${oldNode} is not present in VisGraph for restoration`);\n        }\n      });\n    } else {\n      console.error('Non array provided in updateNodesInVis');\n    }\n  }\n\n  updateRelationinVIS(relation) {\n    let oldRelationID = relation['id'];\n    let oldRelation = this.graphData['edges'].get(oldRelationID);\n    console.log('old relation is  ', oldRelation);\n    if (this.showDeletedData) {\n      this.graphData['edges'].update([relation]);\n    } else {\n      let tem = _.cloneDeep(relation);\n      tem['title'] = this.stringifyProperties(tem);\n      this.graphData['edges'].update([tem]);\n    }\n    // update all+filtered graph array\n    let eleObj: elementOperation = {\n      element: \"edges\",\n      event: \"edit\",\n      data: relation\n    };\n    this.updateGraphArray(eleObj);\n  }\n\n  updateRelationsInVis(relationArray) {\n    // update the relations present in the dataset\n    if (Array.isArray(relationArray)) {\n      relationArray.forEach(relation => {\n        let oldRelationID = relation['id'];\n        let oldRelation = this.graphData['edges'].get(oldRelationID);\n        // update the old node with new node\n        if (!!oldRelation) {\n          oldRelation['properties'] = relation['properties'];\n          oldRelation['title'] = relation['title'];\n          oldRelation['color']['color'] = this.colorConfig['restoreColor']['colorCode'];\n          oldRelation['color']['highlight'] = this.colorConfig['restoreColor']['highlightColorCode'];\n          // set it back in VisJS\n          this.graphData['edges'].update(oldRelation);\n          // update all+filtered graph array\n          let eleObj: elementOperation = {\n            element: 'edges',\n            event: \"restore\",\n            data: oldRelation\n          };\n          this.updateGraphArray(eleObj);\n          console.log('updated relation ', oldRelation);\n        } else {\n          console.error(`Provided relation ${oldRelation} is not present in VisGraph for restoration`);\n        }\n      });\n    } else {\n      console.error('Non array provided in updateNodesInVis');\n    }\n  }\n\n  // to change key in tooltip\n  stringifyProperties(propertyObject) {\n    if (propertyObject.constructor === Object) {\n      let finalString = '';\n      if (propertyObject['properties'].hasOwnProperty('deleted')) {\n        Object.keys(propertyObject['properties']).filter(key => {\n          if (key !== 'deleted' && key !== 'color' && key !== 'Type' && key !== 'skill') {\n            finalString += `<strong>${key} :</strong> ${propertyObject['properties'][key]} <br>`;\n          }\n        });\n      }\n      return finalString;\n    } else { return propertyObject['title']; }\n  }\n\n  addData(node, clickEvent, event) {\n    node['x'] = clickEvent.pointer.canvas.x;\n    node['y'] = clickEvent.pointer.canvas.y;\n    node['color'] = this.colorConfig['defaultColor'][event.data.type];\n    return node;\n  }\n\n  addNodeColor(node) {\n    const colorCode = this.colorConfig['defaultColor'][node.type[0]] || null;\n    if (colorCode) {\n      node['color'] = colorCode;\n      return node;\n    } else {\n      node = this.shiftColorKey(node);\n      if (!node['properties'].hasOwnProperty('color')) {\n        console.warn('Error while adding color to the node ', node['label']);\n      }\n      return node;\n    }\n  }\n\n  startEditProcess(clickedData, typeProcess = 'node') {\n    // to extract relevant information and send it back to the edit modal\n    console.log(clickedData);\n    if (typeProcess === 'node') {\n      this.editRelationData = null;\n      this.editNodeData = clickedData;\n    } else if (typeProcess === 'edge') {\n      this.editNodeData = null;\n      this.editRelationData = clickedData;\n    }\n  }\n\n  getNodeDetails(nodeIDs) {\n    // process node IDs and send back\n    const changedNodeIDs = nodeIDs.map(nodeID => {\n      return this.graphData['nodes'].get(nodeID);\n    });\n    return changedNodeIDs;\n  }\n\n\n  doubleClickHandler(event) {\n    // if nodes array exists, it is a node edit event else it is edge edit event\n    if (!!event.nodes.length) {\n      // emit node edit event data\n      let clickedNode = this.graphData['nodes'].get(event.nodes);\n      // if there are multiple nodes one above another, always select the top most one\n      if (clickedNode.length > 0) {\n        clickedNode = _.cloneDeep(clickedNode[0]);\n      }\n      console.log('clicked Node is ', clickedNode);\n      this.startEditProcess(clickedNode);\n    } else if (!!event.edges.length) {\n      // emit edge edit event data\n      if (event.nodes.length > 0) {\n        // user clicked on node despite selecting 'edit edge' feature\n        alert('Please click on an edge not a node');\n      } else {\n        let clickedEdge = this.graphData['edges'].get(event.edges[0]);\n        // if there are multiple nodes one above another, always select the top most one\n        if ([clickedEdge].length > 0) {\n          clickedEdge = _.cloneDeep([clickedEdge][0]);\n        }\n        console.log('clicked Edge is ', clickedEdge);\n        // emit data for edge\n        this.startEditProcess(clickedEdge, 'edge');\n      }\n    }\n  }\n\n  // to filter data from alldata array and store it to new array  \n  setFilteredData(isDeletedToggle = false) {\n    this.filteredGraphData['nodes'] = [];\n    this.filteredGraphData['edges'] = [];\n    this.allGraphData['nodes'].filter(node => {\n      if (node['properties']['deleted'] === \"false\" || node['properties']['deleted'] === false) {\n        let tem = _.cloneDeep(node);\n        if (isDeletedToggle) {\n          delete tem['color'];\n        }\n        tem['title'] = this.stringifyProperties(tem);\n        this.filteredGraphData['nodes'].push(tem);\n      }\n    });\n    this.allGraphData['edges'].filter(edge => {\n      if (edge['properties']['deleted'] === \"false\" || edge['properties']['deleted'] === false) {\n        let tem = _.cloneDeep(edge);\n        tem['title'] = this.stringifyProperties(tem);\n        this.filteredGraphData['edges'].push(tem);\n      }\n    });\n  }\n\n  // to show all data\n  showAllData() {\n    // create dataset for all data \n    this.graphData['nodes'] = new DataSet(this.allGraphData['nodes']);\n    this.graphData['edges'] = new DataSet(this.allGraphData['edges']);\n    // to count graph element\n    this.selectedCount = this.graphData['nodes'].length;\n    // display data\n    this.reinitializeGraph();\n    this.loader = false;\n\n  }\n\n  // to show filtered data\n  showFilteredData() {\n    // create dataset for filtered graph data\n    this.graphData['nodes'] = new DataSet(this.filteredGraphData['nodes']);\n    this.graphData['edges'] = new DataSet(this.filteredGraphData['edges']);\n    // to count graph element\n    this.selectedCount = this.graphData['nodes'].length;\n    // display data\n    this.reinitializeGraph();\n    this.loader = false;\n  }\n\n  cleanPropertyBindingData(cleanType) {\n    if (\n      this.editNodeData !== null || this.editRelationData !== null ||\n      this.promptRelationCreateAfterNode !== null || this.restoredData !== null\n    ) {\n      console.log('cleaning data for ', cleanType);\n      if (!!cleanType) {\n        if (cleanType === 'node') {\n          this.editNodeData = null;\n        } else if (cleanType === 'relation') {\n          this.editRelationData = null;\n        } else if (cleanType === 'afterCreateNode') {\n          this.promptRelationCreateAfterNode = null\n        } else if (cleanType === 'restore') {\n          this.restoredData = null;\n        }\n        else {\n          // nothing\n        }\n      }\n    }\n  }\n\n  initRestoreData(restoreDataObj) {\n    // this.loader = true;\n    if (Object.keys(restoreDataObj).length > 0 && restoreDataObj.hasOwnProperty('type') && restoreDataObj.hasOwnProperty('data')) {\n\n      let requestBodyObj = { nodes: [], relations: [] };\n\n      if (restoreDataObj['type'] === 'node_relation') {\n        // the data key should have both node and relation key with id array key inside them\n        if (Object.keys(restoreDataObj['data']).length > 0 && Object.keys(restoreDataObj['data']).length <= 2) {\n          if (restoreDataObj['data'].hasOwnProperty('node') &&\n            restoreDataObj['data']['node'].hasOwnProperty('id') &&\n            Array.isArray(restoreDataObj['data']['node']['id'])\n          ) {\n            requestBodyObj.nodes = _.cloneDeep(restoreDataObj['data']['node']['id']);\n          } else {\n            // the data object does not have valid node key or id key\n            console.error('the data object does not have valid node key or id key for initRestoreData');\n          }\n          if (restoreDataObj['data'].hasOwnProperty('relation') &&\n            restoreDataObj['data']['relation'].hasOwnProperty('id') &&\n            Array.isArray(restoreDataObj['data']['relation']['id'])\n          ) {\n            requestBodyObj.nodes = _.cloneDeep(restoreDataObj['data']['relation']['id']);\n          } else {\n            // the data object does not have valid relation key or id key\n            console.error('the data object does not have valid relation key or id key for relation in initRestoreData');\n          }\n        } else {\n          // providing irrelevant number of keys to the api in the data object\n          console.error('irrelevant number of keys to the api in the data object in initRestoreData');\n        }\n      } else {\n        if (restoreDataObj['type'] === 'node' && restoreDataObj['data'].hasOwnProperty('id')) {\n          requestBodyObj.nodes = [restoreDataObj['data']['id']];\n        }\n        if (restoreDataObj['type'] === 'relation' && restoreDataObj['data'].hasOwnProperty('id')) {\n          requestBodyObj.relations = [restoreDataObj['data']['id']];\n        }\n      }\n\n      // requestBody has been prepared\n      console.log('final request body is ', requestBodyObj);\n      this.graphService.restoreData(requestBodyObj).subscribe(response => {\n        // once the response if okay, send back the confirmation to the create nodes\n        let finalData = {\n          nodes: response['seperateNodes'],\n          relations: response['seperateEdges']\n        };\n        // update the nodes / relations in the visJS graph also and finally tell the modal to go away\n        let processedResponse = this.updateRestoreDataInVis(finalData);\n        if (processedResponse.constructor === Boolean && processedResponse) {\n          // this will be executed when a node has been restored\n          this.restoredData = _.cloneDeep(finalData);\n        } else {\n          this.restoredData = null;\n          this.loader = false;\n        }\n        this.snackBar.success({message: this.DATA_RESTORE_TEXT_SUCCESS});\n      }, error => {\n        console.error('An error occured while restoring the data from the API');\n        console.log(error);\n        this.loader = false;\n        this.snackBar.error({message: this.DATA_RESTORE_TEXT_ERROR});\n      });\n    } else {\n      console.error('Did not recieve any valid object data for restore');\n      this.loader = false;\n    }\n  }\n\n  updateRestoreDataInVis(restoredDataObj) {\n    try {\n      if (restoredDataObj.hasOwnProperty('nodes') && !!restoredDataObj['nodes'] && restoredDataObj['nodes'].length > 0) {\n        this.updateNodesInVis(restoredDataObj['nodes']);\n      }\n      if (restoredDataObj.hasOwnProperty('relations') && !!restoredDataObj['relations'] && restoredDataObj['relations'].length > 0) {\n        this.updateRelationsInVis(restoredDataObj['relations']);\n      }\n      return true;\n    } catch (e) {\n      console.error('An error occured while updating visJS in updateRestoreDataInVis function ', e);\n      return false;\n    }\n    // the purpose of the function is to update the nodes / relations in VisJS dataSet\n  }\n\n  // to update allGraphData and filteredGraphData\n  updateGraphArray(obj: elementOperation): void {\n    try {\n      if (obj.hasOwnProperty('event') && obj.event === 'create') {\n        // verify if color property is present and add it as is\n        obj.data = this.shiftColorKey(obj.data);\n        this.insertIntoAllGraphArray(obj);\n        this.insertIntoFilteredGraphArray(obj);\n      } else if (obj.hasOwnProperty('event') && obj.event === 'edit' || obj.event === 'delete' || obj.event === 'restore') {\n        this.updateAllGraphArray(obj);\n        this.updateFilteredGraphArray(obj);\n      }\n    } catch (e) {\n      console.log(\"Method : updateGraphArray\", \"Component : GraphVisualizerComponent\", \"Error : \", e);\n    }\n\n  }\n\n  // update allgraphdata array\n  updateAllGraphArray(obj: elementOperation): void {\n    try {\n      if (obj.hasOwnProperty('data')) {\n        let index;\n        // update in all graph data array\n        if (obj.hasOwnProperty('element') && obj.element === 'nodes') {\n          // for node\n          if (obj.hasOwnProperty('event') && obj.event === 'delete') {\n            obj.data['color'] = this.colorConfig['deletedColor']['colorCode'];\n          }\n          index = _.findIndex(this.allGraphData[obj.element], { label: obj.data['label'] });\n        } else if (obj.hasOwnProperty('element') && obj.element === 'edges') {\n          // for edge\n          if (obj.hasOwnProperty('event') && obj.event === 'delete') {\n            obj.data['color']['color'] = this.colorConfig['deletedColor']['colorCode'];\n            obj.data['color']['highlight'] = this.colorConfig['deletedColor']['highlightColorCode'];\n          }\n          index = _.findIndex(this.allGraphData[obj.element], { id: obj.data['id'] })\n        }\n        if (index >= 0) {\n          // update in array\n          this.allGraphData[obj.element][index] = obj.data;\n        }\n      }\n    } catch (e) {\n      console.log(\"Method : updateAllGraphArray\", \"Component : GraphVisualizerComponent\", \"Error : \", e);\n    }\n  }\n\n  // update filteredgrapdata garray\n  updateFilteredGraphArray(obj: elementOperation): void {\n    try {\n      if (obj.hasOwnProperty('data')) {\n        let index;\n        // update in all graph data array\n        if (obj.hasOwnProperty('element') && obj.element === 'nodes') {\n          index = _.findIndex(this.filteredGraphData[obj.element], { label: obj.data['label'] });\n        } else if (obj.hasOwnProperty('element') && obj.element === 'edges') {\n          // remove deleted edge from filtered data array\n          index = _.findIndex(this.filteredGraphData[obj.element], { id: obj.data['id'] })\n        }\n        if (index >= 0) {\n          if (obj.hasOwnProperty('event') && obj.event === 'delete') {\n            this.filteredGraphData[obj.element].splice(index, 1);\n          } else if (obj.hasOwnProperty('event') && obj.event === 'edit') {\n            // update filterd graph data\n            let tem = _.cloneDeep(obj.data);\n            tem['title'] = this.stringifyProperties(tem);\n            this.filteredGraphData[obj.element][index] = tem;\n          }\n        } else if (obj.hasOwnProperty('event') && obj.event === 'restore') {\n          this.insertIntoFilteredGraphArray(obj);\n        }\n      }\n    } catch (e) {\n      console.log(\"Method : updateFilteredGraphArray\", \"Component : GraphVisualizerComponent\", \"Error : \", e);\n    }\n  }\n\n  // insert into allgraphdata array\n  insertIntoAllGraphArray(obj: elementOperation): void {\n    try {\n      if (obj.hasOwnProperty('data') && obj.hasOwnProperty('element')) {\n        this.allGraphData[obj.element].push(obj.data);\n      }\n    } catch (e) {\n      console.log(\"Method : insertIntoAllGraphArray\", \"Component : GraphVisualizerComponent\", \"Error : \", e);\n    }\n  }\n\n  shiftColorKey(elementObject, previousObject = null) {\n    // To add a new color key in the root level if color is present in properties key\n    if (elementObject.hasOwnProperty('properties') && elementObject['properties'].hasOwnProperty('color')) {\n      elementObject['color'] = elementObject['properties']['color'];\n      return elementObject;\n    } else if (previousObject !== null) {\n      return previousObject;\n    } else {\n      return elementObject;\n    }\n  }\n\n  // insert into filtered graph array\n  insertIntoFilteredGraphArray(obj: elementOperation): void {\n    try {\n      if (obj.hasOwnProperty('data') && obj.hasOwnProperty('element')) {\n        let tem = _.cloneDeep(obj.data);\n        tem['title'] = this.stringifyProperties(tem);\n        this.filteredGraphData[obj.element].push(tem);\n      }\n    } catch (e) {\n      console.log(\"Method : insertIntoFilteredGraphArray\", \"Component : GraphVisualizerComponent\", \"Error : \", e);\n    }\n  }\n}\n","module.exports = \"<!-- <app-dashboard-sidebar (eventClicked)=\\\"childEventClicked($event)\\\" (nodeTypesEvent)=\\\"sendTypes($event)\\\" [newNodeCreated]=\\\"newNodeCreated\\\" [nodeLimitEnterEvent] = \\\"nodeLimitValue\\\"></app-dashboard-sidebar> -->\\n<app-graph-visualizer [username]=\\\"username\\\" (newNodeCreated)=\\\"childEventClicked2($event)\\\" [event]=\\\"clickedEvent\\\" (nodeLimitEvent)=\\\"sendLimitToSidebar($event)\\\" [totalTypesArray]=\\\"totalTypesArray\\\"></app-graph-visualizer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZGFzaGJvYXJkLXYyLWNvcHkvY29tcG9uZW50cy9tYWluLXYyL21haW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  public username: string;\n  public clickedEvent: String;\n  public totalTypesArray = [];\n  public nodeLimitValue = null;\n  public newNodeCreated: String;\n  constructor(\n    private route: ActivatedRoute\n  ) {\n    console.log(this.route.snapshot.params.name);\n    this.username = this.route.snapshot.params.name;\n  }\n\n  ngOnInit() {\n  }\n\n  childEventClicked(event: String) {\n    this.clickedEvent = event;\n  }\n  childEventClicked2(event: String) {\n    this.newNodeCreated = event;\n  }\n\n  sendTypes(event) {\n    if (!!event && event.length > 0) {\n      this.totalTypesArray = event;\n    }\n  }\n\n  sendLimitToSidebar(event) {\n    // this  function is responsible to send the nodeLimit value to the sidebar so that apply function can be clicked\n    if (!isNaN(event)) {\n      this.nodeLimitValue = event;\n    } else {\n      console.log('nodelimit is not a number');\n      this.nodeLimitValue = null;\n    }\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { MainComponent } from \"./components/main-v2/main.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: MainComponent, data: { title: \"dashboard\" } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardV2RoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { DashboardV2RoutingModule } from './dashboard-v2-routing.module';\nimport { MainComponent } from './components/main-v2/main.component';\nimport { GraphVisualizerComponent } from './components/graph-v2-visualizer/graph-visualizer.component';\nimport { DashboardSidebarComponent } from './components/dashboard-v2-sidebar/dashboard-sidebar.component';\nimport { DashboardHeaderComponent } from './components/dashboard-v2-header/dashboard-header.component';\n\nimport {SuiSelectModule, SuiModule} from 'ng2-semantic-ui';\nimport { SharedModule } from '../shared/shared.module';\nimport {AlgoRunnerModule} from './../algo-runner/algo-runner.module';\nimport { ColorPanelComponent } from './components/color-panel/color-panel/color-panel.component';\nimport { CreateNodesComponent } from './components/create-nodes/create-nodes.component';\nimport { GraphExporterComponent } from './components/graph-exporter/graph-exporter.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Material design components from custom Material module\nimport {CustomMaterialModule} from './../custom-material/custom-material/custom-material.module';\nimport { MaterialService } from '../custom-material/services/material-core/material.service';\n@NgModule({\n  declarations: [MainComponent, GraphVisualizerComponent, DashboardSidebarComponent, DashboardHeaderComponent,\n    ColorPanelComponent, CreateNodesComponent, GraphExporterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SuiSelectModule, SuiModule,\n    SharedModule,\n    CustomMaterialModule,\n    DashboardV2RoutingModule,\n    AlgoRunnerModule\n  ],\n  exports: [\n    MainComponent, DashboardHeaderComponent,\n    DashboardSidebarComponent, ColorPanelComponent,\n    GraphExporterComponent, GraphVisualizerComponent,\n    CreateNodesComponent, DashboardHeaderComponent],\n  providers : [MaterialService]\n})\nexport class DashboardModule { }\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorServiceService {\n  private colorConfig = {\n    defaultColor: {\n      // Academia: '#ff4444',\n      Skill: '#FF8800',\n      Trainer: '#33b5e5',\n      Batch: '#c51162',\n      Student: '#007E33',\n      Spot: '#0d47a1',\n      // Consulting: '#ffbb33',\n      // Government: '#00C851',\n      // 'Impact Investor': '#ffbb33',\n      // 'International Agency': '#CC0000',\n      // Media: '#FF8800',\n      // 'NGO/CBO': '#007E33',\n      // People: '#0099CC',\n      // Philanthropy: '#9933CC',\n      // Platform: '#0d47a1',\n      // 'Private Sector': '#2BBBAD',\n      // 'Research Institute': '#c51162'\n\n    },\n    selectedColor: {\n      // Academia: '#ff4444',\n      // Consulting: '#ffbb33',\n      // Government: '#00C851',\n      // 'Impact Investor': '#33b5e5',\n      // 'International Agency': '#CC0000',\n      // Media: '#FF8800',\n      // 'NGO/CBO': '#007E33',\n      // People: '#0099CC',\n      // Philanthropy: '#9933CC',\n      // Platform: '#0d47a1',\n      // 'Private Sector': '#2BBBAD',\n      // 'Research Institute': '#c51162'\n\n    },\n    deletedColor: {\n      colorCode: '#C0C0C0',\n      highlightColorCode: '#9a9a9a'\n    },\n    restoreColor: {\n      colorCode: '#96C1FA',\n      highlightColorCode: '#249BFC'\n    },\n    initialColor: {\n      colorCode: '#96C1FA'\n    }\n  };\n \n  public colorObj$ = new BehaviorSubject<object>(this.colorConfig);\n\n  constructor() {\n  }\n  updateDefaultColor(data){\n    this.colorConfig.defaultColor = data;\n    this.colorObj$.next(this.colorConfig);\n  }\n  insertIntoDefaultColor(data){\n    if(!this.colorConfig.defaultColor[data['type']]){\n      this.colorConfig.defaultColor[data['type']] = data['color'];\n      this.colorObj$.next(this.colorConfig);\n    }\n  }\n}\n"],"sourceRoot":""}